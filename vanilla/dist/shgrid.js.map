{"version":3,"file":"shgrid.js","sources":["../node_modules/svelte/internal/index.mjs","../../src/lib/loading.svelte","../node_modules/svelte/easing/index.mjs","../node_modules/svelte/animate/index.mjs","../../node_modules/svelte-dnd-action/src/helpers/dispatcher.js","../../node_modules/svelte-dnd-action/src/constants.js","../../node_modules/svelte-dnd-action/src/helpers/intersection.js","../../node_modules/svelte-dnd-action/src/helpers/listUtil.js","../../node_modules/svelte-dnd-action/src/helpers/scroller.js","../../node_modules/svelte-dnd-action/src/helpers/util.js","../../node_modules/svelte-dnd-action/src/helpers/observer.js","../../node_modules/svelte-dnd-action/src/helpers/windowScroller.js","../../node_modules/svelte-dnd-action/src/featureFlags.js","../../node_modules/svelte-dnd-action/src/helpers/styler.js","../../node_modules/svelte-dnd-action/src/pointerAction.js","../../node_modules/svelte-dnd-action/src/helpers/svelteNodeClone.js","../../node_modules/svelte-dnd-action/src/helpers/aria.js","../../node_modules/svelte-dnd-action/src/keyboardAction.js","../../node_modules/svelte-dnd-action/src/action.js","../../src/lib/fields/switch.svelte","../../src/lib/fields/select.svelte","../../src/lib/components/options/sorter.svelte","../../src/lib/options.svelte","../../src/lib/paginator.svelte","../../src/lib/errorRow.svelte","../../src/lib/shgrid.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<div class=\"loading-wrapper\">\n\t<div class=\"lds-roller\">\n\t\t<div />\n\t\t<div />\n\t\t<div />\n\t\t<div />\n\t\t<div />\n\t\t<div />\n\t\t<div />\n\t\t<div />\n\t</div>\n</div>\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicOut } from '../easing/index.mjs';\nimport { is_function } from '../internal/index.mjs';\n\nfunction flip(node, { from, to }, params = {}) {\n    const style = getComputedStyle(node);\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);\n    const dx = (from.left + from.width * ox / to.width) - (to.left + ox);\n    const dy = (from.top + from.height * oy / to.height) - (to.top + oy);\n    const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;\n    return {\n        delay,\n        duration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,\n        easing,\n        css: (t, u) => {\n            const x = u * dx;\n            const y = u * dy;\n            const sx = t + u * from.width / to.width;\n            const sy = t + u * from.height / to.height;\n            return `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;\n        }\n    };\n}\n\nexport { flip };\n","// external events\nconst FINALIZE_EVENT_NAME = \"finalize\";\nconst CONSIDER_EVENT_NAME = \"consider\";\n\n/**\n * @typedef {Object} Info\n * @property {string} trigger\n * @property {string} id\n * @property {string} source\n * @param {Node} el\n * @param {Array} items\n * @param {Info} info\n */\nexport function dispatchFinalizeEvent(el, items, info) {\n    el.dispatchEvent(\n        new CustomEvent(FINALIZE_EVENT_NAME, {\n            detail: {items, info}\n        })\n    );\n}\n\n/**\n * Dispatches a consider event\n * @param {Node} el\n * @param {Array} items\n * @param {Info} info\n */\nexport function dispatchConsiderEvent(el, items, info) {\n    el.dispatchEvent(\n        new CustomEvent(CONSIDER_EVENT_NAME, {\n            detail: {items, info}\n        })\n    );\n}\n\n// internal events\nexport const DRAGGED_ENTERED_EVENT_NAME = \"draggedEntered\";\nexport const DRAGGED_LEFT_EVENT_NAME = \"draggedLeft\";\nexport const DRAGGED_OVER_INDEX_EVENT_NAME = \"draggedOverIndex\";\nexport const DRAGGED_LEFT_DOCUMENT_EVENT_NAME = \"draggedLeftDocument\";\n\nexport const DRAGGED_LEFT_TYPES = {\n    LEFT_FOR_ANOTHER: \"leftForAnother\",\n    OUTSIDE_OF_ANY: \"outsideOfAny\"\n};\n\nexport function dispatchDraggedElementEnteredContainer(containerEl, indexObj, draggedEl) {\n    containerEl.dispatchEvent(\n        new CustomEvent(DRAGGED_ENTERED_EVENT_NAME, {\n            detail: {indexObj, draggedEl}\n        })\n    );\n}\n\n/**\n * @param containerEl - the dropzone the element left\n * @param draggedEl - the dragged element\n * @param theOtherDz - the new dropzone the element entered\n */\nexport function dispatchDraggedElementLeftContainerForAnother(containerEl, draggedEl, theOtherDz) {\n    containerEl.dispatchEvent(\n        new CustomEvent(DRAGGED_LEFT_EVENT_NAME, {\n            detail: {draggedEl, type: DRAGGED_LEFT_TYPES.LEFT_FOR_ANOTHER, theOtherDz}\n        })\n    );\n}\n\nexport function dispatchDraggedElementLeftContainerForNone(containerEl, draggedEl) {\n    containerEl.dispatchEvent(\n        new CustomEvent(DRAGGED_LEFT_EVENT_NAME, {\n            detail: {draggedEl, type: DRAGGED_LEFT_TYPES.OUTSIDE_OF_ANY}\n        })\n    );\n}\nexport function dispatchDraggedElementIsOverIndex(containerEl, indexObj, draggedEl) {\n    containerEl.dispatchEvent(\n        new CustomEvent(DRAGGED_OVER_INDEX_EVENT_NAME, {\n            detail: {indexObj, draggedEl}\n        })\n    );\n}\nexport function dispatchDraggedLeftDocument(draggedEl) {\n    window.dispatchEvent(\n        new CustomEvent(DRAGGED_LEFT_DOCUMENT_EVENT_NAME, {\n            detail: {draggedEl}\n        })\n    );\n}\n","import {DRAGGED_ENTERED_EVENT_NAME, DRAGGED_LEFT_EVENT_NAME, DRAGGED_OVER_INDEX_EVENT_NAME} from \"./helpers/dispatcher\";\n\nexport const TRIGGERS = {\n    DRAG_STARTED: \"dragStarted\",\n    DRAGGED_ENTERED: DRAGGED_ENTERED_EVENT_NAME,\n    DRAGGED_ENTERED_ANOTHER: \"dragEnteredAnother\",\n    DRAGGED_OVER_INDEX: DRAGGED_OVER_INDEX_EVENT_NAME,\n    DRAGGED_LEFT: DRAGGED_LEFT_EVENT_NAME,\n    DRAGGED_LEFT_ALL: \"draggedLeftAll\",\n    DROPPED_INTO_ZONE: \"droppedIntoZone\",\n    DROPPED_INTO_ANOTHER: \"droppedIntoAnother\",\n    DROPPED_OUTSIDE_OF_ANY: \"droppedOutsideOfAny\",\n    DRAG_STOPPED: \"dragStopped\"\n};\n\nexport const SOURCES = {\n    POINTER: \"pointer\",\n    KEYBOARD: \"keyboard\"\n};\n\nexport const SHADOW_ITEM_MARKER_PROPERTY_NAME = \"isDndShadowItem\";\nexport const SHADOW_ELEMENT_ATTRIBUTE_NAME = \"data-is-dnd-shadow-item-internal\";\nexport const SHADOW_ELEMENT_HINT_ATTRIBUTE_NAME = \"data-is-dnd-shadow-item-hint\";\nexport const SHADOW_PLACEHOLDER_ITEM_ID = \"id:dnd-shadow-placeholder-0000\";\nexport const DRAGGED_ELEMENT_ID = \"dnd-action-dragged-el\";\n\nexport let ITEM_ID_KEY = \"id\";\nlet activeDndZoneCount = 0;\nexport function incrementActiveDropZoneCount() {\n    activeDndZoneCount++;\n}\nexport function decrementActiveDropZoneCount() {\n    if (activeDndZoneCount === 0) {\n        throw new Error(\"Bug! trying to decrement when there are no dropzones\");\n    }\n    activeDndZoneCount--;\n}\n\n/**\n * Allows using another key instead of \"id\" in the items data. This is global and applies to all dndzones.\n * Has to be called when there are no rendered dndzones whatsoever.\n * @param {String} newKeyName\n * @throws {Error} if it was called when there are rendered dndzones or if it is given the wrong type (not a string)\n */\nexport function overrideItemIdKeyNameBeforeInitialisingDndZones(newKeyName) {\n    if (activeDndZoneCount > 0) {\n        throw new Error(\"can only override the id key before initialising any dndzone\");\n    }\n    if (typeof newKeyName !== \"string\") {\n        throw new Error(\"item id key has to be a string\");\n    }\n    printDebug(() => [\"overriding item id key name\", newKeyName]);\n    ITEM_ID_KEY = newKeyName;\n}\n\nexport const isOnServer = typeof window === \"undefined\";\n\nexport let printDebug = () => {};\n\n/**\n * Allows the user to show/hide console debug output\n * * @param {boolean} isDebug\n */\nexport function setDebugMode(isDebug) {\n    if (isDebug) {\n        printDebug = (generateMessage, logFunction = console.debug) => {\n            const message = generateMessage();\n            if (Array.isArray(message)) {\n                logFunction(...message);\n            } else {\n                logFunction(message);\n            }\n        };\n    } else {\n        printDebug = () => {};\n    }\n}\n","// This is based off https://stackoverflow.com/questions/27745438/how-to-compute-getboundingclientrect-without-considering-transforms/57876601#57876601\n// It removes the transforms that are potentially applied by the flip animations\n/**\n * Gets the bounding rect but removes transforms (ex: flip animation)\n * @param {HTMLElement} el\n * @return {{top: number, left: number, bottom: number, right: number}}\n */\nexport function getBoundingRectNoTransforms(el) {\n    let ta;\n    const rect = el.getBoundingClientRect();\n    const style = getComputedStyle(el);\n    const tx = style.transform;\n\n    if (tx) {\n        let sx, sy, dx, dy;\n        if (tx.startsWith(\"matrix3d(\")) {\n            ta = tx.slice(9, -1).split(/, /);\n            sx = +ta[0];\n            sy = +ta[5];\n            dx = +ta[12];\n            dy = +ta[13];\n        } else if (tx.startsWith(\"matrix(\")) {\n            ta = tx.slice(7, -1).split(/, /);\n            sx = +ta[0];\n            sy = +ta[3];\n            dx = +ta[4];\n            dy = +ta[5];\n        } else {\n            return rect;\n        }\n\n        const to = style.transformOrigin;\n        const x = rect.x - dx - (1 - sx) * parseFloat(to);\n        const y = rect.y - dy - (1 - sy) * parseFloat(to.slice(to.indexOf(\" \") + 1));\n        const w = sx ? rect.width / sx : el.offsetWidth;\n        const h = sy ? rect.height / sy : el.offsetHeight;\n        return {\n            x: x,\n            y: y,\n            width: w,\n            height: h,\n            top: y,\n            right: x + w,\n            bottom: y + h,\n            left: x\n        };\n    } else {\n        return rect;\n    }\n}\n\n/**\n * Gets the absolute bounding rect (accounts for the window's scroll position and removes transforms)\n * @param {HTMLElement} el\n * @return {{top: number, left: number, bottom: number, right: number}}\n */\nexport function getAbsoluteRectNoTransforms(el) {\n    const rect = getBoundingRectNoTransforms(el);\n    return {\n        top: rect.top + window.scrollY,\n        bottom: rect.bottom + window.scrollY,\n        left: rect.left + window.scrollX,\n        right: rect.right + window.scrollX\n    };\n}\n\n/**\n * Gets the absolute bounding rect (accounts for the window's scroll position)\n * @param {HTMLElement} el\n * @return {{top: number, left: number, bottom: number, right: number}}\n */\nexport function getAbsoluteRect(el) {\n    const rect = el.getBoundingClientRect();\n    return {\n        top: rect.top + window.scrollY,\n        bottom: rect.bottom + window.scrollY,\n        left: rect.left + window.scrollX,\n        right: rect.right + window.scrollX\n    };\n}\n\n/**\n * finds the center :)\n * @typedef {Object} Rect\n * @property {number} top\n * @property {number} bottom\n * @property {number} left\n * @property {number} right\n * @param {Rect} rect\n * @return {{x: number, y: number}}\n */\nexport function findCenter(rect) {\n    return {\n        x: (rect.left + rect.right) / 2,\n        y: (rect.top + rect.bottom) / 2\n    };\n}\n\n/**\n * @typedef {Object} Point\n * @property {number} x\n * @property {number} y\n * @param {Point} pointA\n * @param {Point} pointB\n * @return {number}\n */\nfunction calcDistance(pointA, pointB) {\n    return Math.sqrt(Math.pow(pointA.x - pointB.x, 2) + Math.pow(pointA.y - pointB.y, 2));\n}\n\n/**\n * @param {Point} point\n * @param {Rect} rect\n * @return {boolean|boolean}\n */\nexport function isPointInsideRect(point, rect) {\n    return point.y <= rect.bottom && point.y >= rect.top && point.x >= rect.left && point.x <= rect.right;\n}\n\n/**\n * find the absolute coordinates of the center of a dom element\n * @param el {HTMLElement}\n * @returns {{x: number, y: number}}\n */\nexport function findCenterOfElement(el) {\n    return findCenter(getAbsoluteRect(el));\n}\n\n/**\n * @param {HTMLElement} elA\n * @param {HTMLElement} elB\n * @return {boolean}\n */\nexport function isCenterOfAInsideB(elA, elB) {\n    const centerOfA = findCenterOfElement(elA);\n    const rectOfB = getAbsoluteRectNoTransforms(elB);\n    return isPointInsideRect(centerOfA, rectOfB);\n}\n\n/**\n * @param {HTMLElement|ChildNode} elA\n * @param {HTMLElement|ChildNode} elB\n * @return {number}\n */\nexport function calcDistanceBetweenCenters(elA, elB) {\n    const centerOfA = findCenterOfElement(elA);\n    const centerOfB = findCenterOfElement(elB);\n    return calcDistance(centerOfA, centerOfB);\n}\n\n/**\n * @param {HTMLElement} el - the element to check\n * @returns {boolean} - true if the element in its entirety is off screen including the scrollable area (the normal dom events look at the mouse rather than the element)\n */\nexport function isElementOffDocument(el) {\n    const rect = getAbsoluteRect(el);\n    return rect.right < 0 || rect.left > document.documentElement.scrollWidth || rect.bottom < 0 || rect.top > document.documentElement.scrollHeight;\n}\n\n/**\n * If the point is inside the element returns its distances from the sides, otherwise returns null\n * @param {Point} point\n * @param {HTMLElement} el\n * @return {null|{top: number, left: number, bottom: number, right: number}}\n */\nexport function calcInnerDistancesBetweenPointAndSidesOfElement(point, el) {\n    const rect = getAbsoluteRect(el);\n    if (!isPointInsideRect(point, rect)) {\n        return null;\n    }\n    return {\n        top: point.y - rect.top,\n        bottom: rect.bottom - point.y,\n        left: point.x - rect.left,\n        // TODO - figure out what is so special about right (why the rect is too big)\n        right: Math.min(rect.right, document.documentElement.clientWidth) - point.x\n    };\n}\n","import {isCenterOfAInsideB, calcDistanceBetweenCenters, getAbsoluteRectNoTransforms, isPointInsideRect, findCenterOfElement} from \"./intersection\";\nimport {printDebug, SHADOW_ELEMENT_ATTRIBUTE_NAME} from \"../constants\";\n\nlet dzToShadowIndexToRect;\n\n/**\n * Resets the cache that allows for smarter \"would be index\" resolution. Should be called after every drag operation\n */\nexport function resetIndexesCache() {\n    printDebug(() => \"resetting indexes cache\");\n    dzToShadowIndexToRect = new Map();\n}\nresetIndexesCache();\n\n/**\n * Resets the cache that allows for smarter \"would be index\" resolution for a specific dropzone, should be called after the zone was scrolled\n * @param {HTMLElement} dz\n */\nexport function resetIndexesCacheForDz(dz) {\n    printDebug(() => \"resetting indexes cache for dz\");\n    dzToShadowIndexToRect.delete(dz);\n}\n\n/**\n * Caches the coordinates of the shadow element when it's in a certain index in a certain dropzone.\n * Helpful in order to determine \"would be index\" more effectively\n * @param {HTMLElement} dz\n * @return {number} - the shadow element index\n */\nfunction cacheShadowRect(dz) {\n    const shadowElIndex = Array.from(dz.children).findIndex(child => child.getAttribute(SHADOW_ELEMENT_ATTRIBUTE_NAME));\n    if (shadowElIndex >= 0) {\n        if (!dzToShadowIndexToRect.has(dz)) {\n            dzToShadowIndexToRect.set(dz, new Map());\n        }\n        dzToShadowIndexToRect.get(dz).set(shadowElIndex, getAbsoluteRectNoTransforms(dz.children[shadowElIndex]));\n        return shadowElIndex;\n    }\n    return undefined;\n}\n\n/**\n * @typedef {Object} Index\n * @property {number} index - the would be index\n * @property {boolean} isProximityBased - false if the element is actually over the index, true if it is not over it but this index is the closest\n */\n/**\n * Find the index for the dragged element in the list it is dragged over\n * @param {HTMLElement} floatingAboveEl\n * @param {HTMLElement} collectionBelowEl\n * @returns {Index|null} -  if the element is over the container the Index object otherwise null\n */\nexport function findWouldBeIndex(floatingAboveEl, collectionBelowEl) {\n    if (!isCenterOfAInsideB(floatingAboveEl, collectionBelowEl)) {\n        return null;\n    }\n    const children = collectionBelowEl.children;\n    // the container is empty, floating element should be the first\n    if (children.length === 0) {\n        return {index: 0, isProximityBased: true};\n    }\n    const shadowElIndex = cacheShadowRect(collectionBelowEl);\n\n    // the search could be more efficient but keeping it simple for now\n    // a possible improvement: pass in the lastIndex it was found in and check there first, then expand from there\n    for (let i = 0; i < children.length; i++) {\n        if (isCenterOfAInsideB(floatingAboveEl, children[i])) {\n            const cachedShadowRect = dzToShadowIndexToRect.has(collectionBelowEl) && dzToShadowIndexToRect.get(collectionBelowEl).get(i);\n            if (cachedShadowRect) {\n                if (!isPointInsideRect(findCenterOfElement(floatingAboveEl), cachedShadowRect)) {\n                    return {index: shadowElIndex, isProximityBased: false};\n                }\n            }\n            return {index: i, isProximityBased: false};\n        }\n    }\n    // this can happen if there is space around the children so the floating element has\n    //entered the container but not any of the children, in this case we will find the nearest child\n    let minDistanceSoFar = Number.MAX_VALUE;\n    let indexOfMin = undefined;\n    // we are checking all of them because we don't know whether we are dealing with a horizontal or vertical container and where the floating element entered from\n    for (let i = 0; i < children.length; i++) {\n        const distance = calcDistanceBetweenCenters(floatingAboveEl, children[i]);\n        if (distance < minDistanceSoFar) {\n            minDistanceSoFar = distance;\n            indexOfMin = i;\n        }\n    }\n    return {index: indexOfMin, isProximityBased: true};\n}\n","import {calcInnerDistancesBetweenPointAndSidesOfElement} from \"./intersection\";\nconst SCROLL_ZONE_PX = 25;\n\nexport function makeScroller() {\n    let scrollingInfo;\n    function resetScrolling() {\n        scrollingInfo = {directionObj: undefined, stepPx: 0};\n    }\n    resetScrolling();\n    // directionObj {x: 0|1|-1, y:0|1|-1} - 1 means down in y and right in x\n    function scrollContainer(containerEl) {\n        const {directionObj, stepPx} = scrollingInfo;\n        if (directionObj) {\n            containerEl.scrollBy(directionObj.x * stepPx, directionObj.y * stepPx);\n            window.requestAnimationFrame(() => scrollContainer(containerEl));\n        }\n    }\n    function calcScrollStepPx(distancePx) {\n        return SCROLL_ZONE_PX - distancePx;\n    }\n\n    /**\n     * If the pointer is next to the sides of the element to scroll, will trigger scrolling\n     * Can be called repeatedly with updated pointer and elementToScroll values without issues\n     * @return {boolean} - true if scrolling was needed\n     */\n    function scrollIfNeeded(pointer, elementToScroll) {\n        if (!elementToScroll) {\n            return false;\n        }\n        const distances = calcInnerDistancesBetweenPointAndSidesOfElement(pointer, elementToScroll);\n        if (distances === null) {\n            resetScrolling();\n            return false;\n        }\n        const isAlreadyScrolling = !!scrollingInfo.directionObj;\n        let [scrollingVertically, scrollingHorizontally] = [false, false];\n        // vertical\n        if (elementToScroll.scrollHeight > elementToScroll.clientHeight) {\n            if (distances.bottom < SCROLL_ZONE_PX) {\n                scrollingVertically = true;\n                scrollingInfo.directionObj = {x: 0, y: 1};\n                scrollingInfo.stepPx = calcScrollStepPx(distances.bottom);\n            } else if (distances.top < SCROLL_ZONE_PX) {\n                scrollingVertically = true;\n                scrollingInfo.directionObj = {x: 0, y: -1};\n                scrollingInfo.stepPx = calcScrollStepPx(distances.top);\n            }\n            if (!isAlreadyScrolling && scrollingVertically) {\n                scrollContainer(elementToScroll);\n                return true;\n            }\n        }\n        // horizontal\n        if (elementToScroll.scrollWidth > elementToScroll.clientWidth) {\n            if (distances.right < SCROLL_ZONE_PX) {\n                scrollingHorizontally = true;\n                scrollingInfo.directionObj = {x: 1, y: 0};\n                scrollingInfo.stepPx = calcScrollStepPx(distances.right);\n            } else if (distances.left < SCROLL_ZONE_PX) {\n                scrollingHorizontally = true;\n                scrollingInfo.directionObj = {x: -1, y: 0};\n                scrollingInfo.stepPx = calcScrollStepPx(distances.left);\n            }\n            if (!isAlreadyScrolling && scrollingHorizontally) {\n                scrollContainer(elementToScroll);\n                return true;\n            }\n        }\n        resetScrolling();\n        return false;\n    }\n\n    return {\n        scrollIfNeeded,\n        resetScrolling\n    };\n}\n","/**\n * @param {Object} object\n * @return {string}\n */\nexport function toString(object) {\n    return JSON.stringify(object, null, 2);\n}\n\n/**\n * Finds the depth of the given node in the DOM tree\n * @param {HTMLElement} node\n * @return {number} - the depth of the node\n */\nexport function getDepth(node) {\n    if (!node) {\n        throw new Error(\"cannot get depth of a falsy node\");\n    }\n    return _getDepth(node, 0);\n}\nfunction _getDepth(node, countSoFar = 0) {\n    if (!node.parentElement) {\n        return countSoFar - 1;\n    }\n    return _getDepth(node.parentElement, countSoFar + 1);\n}\n\n/**\n * A simple util to shallow compare objects quickly, it doesn't validate the arguments so pass objects in\n * @param {Object} objA\n * @param {Object} objB\n * @return {boolean} - true if objA and objB are shallow equal\n */\nexport function areObjectsShallowEqual(objA, objB) {\n    if (Object.keys(objA).length !== Object.keys(objB).length) {\n        return false;\n    }\n    for (const keyA in objA) {\n        if (!{}.hasOwnProperty.call(objB, keyA) || objB[keyA] !== objA[keyA]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Shallow compares two arrays\n * @param arrA\n * @param arrB\n * @return {boolean} - whether the arrays are shallow equal\n */\nexport function areArraysShallowEqualSameOrder(arrA, arrB) {\n    if (arrA.length !== arrB.length) {\n        return false;\n    }\n    for (let i = 0; i < arrA.length; i++) {\n        if (arrA[i] !== arrB[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n","import {findWouldBeIndex, resetIndexesCache, resetIndexesCacheForDz} from \"./listUtil\";\nimport {findCenterOfElement, isElementOffDocument} from \"./intersection\";\nimport {\n    dispatchDraggedElementEnteredContainer,\n    dispatchDraggedElementLeftContainerForAnother,\n    dispatchDraggedElementLeftContainerForNone,\n    dispatchDraggedLeftDocument,\n    dispatchDraggedElementIsOverIndex\n} from \"./dispatcher\";\nimport {makeScroller} from \"./scroller\";\nimport {getDepth} from \"./util\";\nimport {printDebug} from \"../constants\";\n\nconst INTERVAL_MS = 200;\nconst TOLERANCE_PX = 10;\nconst {scrollIfNeeded, resetScrolling} = makeScroller();\nlet next;\n\n/**\n * Tracks the dragged elements and performs the side effects when it is dragged over a drop zone (basically dispatching custom-events scrolling)\n * @param {Set<HTMLElement>} dropZones\n * @param {HTMLElement} draggedEl\n * @param {number} [intervalMs = INTERVAL_MS]\n */\nexport function observe(draggedEl, dropZones, intervalMs = INTERVAL_MS) {\n    // initialization\n    let lastDropZoneFound;\n    let lastIndexFound;\n    let lastIsDraggedInADropZone = false;\n    let lastCentrePositionOfDragged;\n    // We are sorting to make sure that in case of nested zones of the same type the one \"on top\" is considered first\n    const dropZonesFromDeepToShallow = Array.from(dropZones).sort((dz1, dz2) => getDepth(dz2) - getDepth(dz1));\n\n    /**\n     * The main function in this module. Tracks where everything is/ should be a take the actions\n     */\n    function andNow() {\n        const currentCenterOfDragged = findCenterOfElement(draggedEl);\n        const scrolled = scrollIfNeeded(currentCenterOfDragged, lastDropZoneFound);\n        // we only want to make a new decision after the element was moved a bit to prevent flickering\n        if (\n            !scrolled &&\n            lastCentrePositionOfDragged &&\n            Math.abs(lastCentrePositionOfDragged.x - currentCenterOfDragged.x) < TOLERANCE_PX &&\n            Math.abs(lastCentrePositionOfDragged.y - currentCenterOfDragged.y) < TOLERANCE_PX\n        ) {\n            next = window.setTimeout(andNow, intervalMs);\n            return;\n        }\n        if (isElementOffDocument(draggedEl)) {\n            printDebug(() => \"off document\");\n            dispatchDraggedLeftDocument(draggedEl);\n            return;\n        }\n\n        lastCentrePositionOfDragged = currentCenterOfDragged;\n        // this is a simple algorithm, potential improvement: first look at lastDropZoneFound\n        let isDraggedInADropZone = false;\n        for (const dz of dropZonesFromDeepToShallow) {\n            if (scrolled) resetIndexesCacheForDz(lastDropZoneFound);\n            const indexObj = findWouldBeIndex(draggedEl, dz);\n            if (indexObj === null) {\n                // it is not inside\n                continue;\n            }\n            const {index} = indexObj;\n            isDraggedInADropZone = true;\n            // the element is over a container\n            if (dz !== lastDropZoneFound) {\n                lastDropZoneFound && dispatchDraggedElementLeftContainerForAnother(lastDropZoneFound, draggedEl, dz);\n                dispatchDraggedElementEnteredContainer(dz, indexObj, draggedEl);\n                lastDropZoneFound = dz;\n            } else if (index !== lastIndexFound) {\n                dispatchDraggedElementIsOverIndex(dz, indexObj, draggedEl);\n                lastIndexFound = index;\n            }\n            // we handle looping with the 'continue' statement above\n            break;\n        }\n        // the first time the dragged element is not in any dropzone we need to notify the last dropzone it was in\n        if (!isDraggedInADropZone && lastIsDraggedInADropZone && lastDropZoneFound) {\n            dispatchDraggedElementLeftContainerForNone(lastDropZoneFound, draggedEl);\n            lastDropZoneFound = undefined;\n            lastIndexFound = undefined;\n            lastIsDraggedInADropZone = false;\n        } else {\n            lastIsDraggedInADropZone = true;\n        }\n        next = window.setTimeout(andNow, intervalMs);\n    }\n    andNow();\n}\n\n// assumption - we can only observe one dragged element at a time, this could be changed in the future\nexport function unobserve() {\n    printDebug(() => \"unobserving\");\n    clearTimeout(next);\n    resetScrolling();\n    resetIndexesCache();\n}\n","import {makeScroller} from \"./scroller\";\nimport {printDebug} from \"../constants\";\nimport {resetIndexesCache} from \"./listUtil\";\n\nconst INTERVAL_MS = 300;\nlet mousePosition;\n\n/**\n * Do not use this! it is visible for testing only until we get over the issue Cypress not triggering the mousemove listeners\n * // TODO - make private (remove export)\n * @param {{clientX: number, clientY: number}} e\n */\nexport function updateMousePosition(e) {\n    const c = e.touches ? e.touches[0] : e;\n    mousePosition = {x: c.clientX, y: c.clientY};\n}\nconst {scrollIfNeeded, resetScrolling} = makeScroller();\nlet next;\n\nfunction loop() {\n    if (mousePosition) {\n        const scrolled = scrollIfNeeded(mousePosition, document.documentElement);\n        if (scrolled) resetIndexesCache();\n    }\n    next = window.setTimeout(loop, INTERVAL_MS);\n}\n\n/**\n * will start watching the mouse pointer and scroll the window if it goes next to the edges\n */\nexport function armWindowScroller() {\n    printDebug(() => \"arming window scroller\");\n    window.addEventListener(\"mousemove\", updateMousePosition);\n    window.addEventListener(\"touchmove\", updateMousePosition);\n    loop();\n}\n\n/**\n * will stop watching the mouse pointer and won't scroll the window anymore\n */\nexport function disarmWindowScroller() {\n    printDebug(() => \"disarming window scroller\");\n    window.removeEventListener(\"mousemove\", updateMousePosition);\n    window.removeEventListener(\"touchmove\", updateMousePosition);\n    mousePosition = undefined;\n    window.clearTimeout(next);\n    resetScrolling();\n}\n","/**\n * @type {{USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT: string}}\n */\nexport const FEATURE_FLAG_NAMES = Object.freeze({\n    // This flag exists as a workaround for issue 454 (basically a browser bug) - seems like these rect values take time to update when in grid layout. Setting it to true can cause strange behaviour in the REPL for non-grid zones, see issue 470\n    USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT: \"USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT\"\n});\n\nconst featureFlagsMap = {\n    [FEATURE_FLAG_NAMES.USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT]: false\n};\n\n/**\n * @param {FEATURE_FLAG_NAMES} flagName\n * @param {boolean} flagValue\n */\nexport function setFeatureFlag(flagName, flagValue) {\n    if (!FEATURE_FLAG_NAMES[flagName])\n        throw new Error(`Can't set non existing feature flag ${flagName}! Supported flags: ${Object.keys(FEATURE_FLAG_NAMES)}`);\n    featureFlagsMap[flagName] = !!flagValue;\n}\n\n/**\n *\n * @param {FEATURE_FLAG_NAMES} flagName\n * @return {boolean}\n */\nexport function getFeatureFlag(flagName) {\n    if (!FEATURE_FLAG_NAMES[flagName])\n        throw new Error(`Can't get non existing feature flag ${flagName}! Supported flags: ${Object.keys(FEATURE_FLAG_NAMES)}`);\n    return featureFlagsMap[flagName];\n}\n","import {SHADOW_ELEMENT_ATTRIBUTE_NAME, DRAGGED_ELEMENT_ID} from \"../constants\";\nimport {findCenter} from \"./intersection\";\nimport {svelteNodeClone} from \"./svelteNodeClone\";\nimport {getFeatureFlag, FEATURE_FLAG_NAMES} from \"../featureFlags\";\n\nconst TRANSITION_DURATION_SECONDS = 0.2;\n\n/**\n * private helper function - creates a transition string for a property\n * @param {string} property\n * @return {string} - the transition string\n */\nfunction trs(property) {\n    return `${property} ${TRANSITION_DURATION_SECONDS}s ease`;\n}\n/**\n * clones the given element and applies proper styles and transitions to the dragged element\n * @param {HTMLElement} originalElement\n * @param {Point} [positionCenterOnXY]\n * @return {Node} - the cloned, styled element\n */\nexport function createDraggedElementFrom(originalElement, positionCenterOnXY) {\n    const rect = originalElement.getBoundingClientRect();\n    const draggedEl = svelteNodeClone(originalElement);\n    copyStylesFromTo(originalElement, draggedEl);\n    draggedEl.id = DRAGGED_ELEMENT_ID;\n    draggedEl.style.position = \"fixed\";\n    let elTopPx = rect.top;\n    let elLeftPx = rect.left;\n    draggedEl.style.top = `${elTopPx}px`;\n    draggedEl.style.left = `${elLeftPx}px`;\n    if (positionCenterOnXY) {\n        const center = findCenter(rect);\n        elTopPx -= center.y - positionCenterOnXY.y;\n        elLeftPx -= center.x - positionCenterOnXY.x;\n        window.setTimeout(() => {\n            draggedEl.style.top = `${elTopPx}px`;\n            draggedEl.style.left = `${elLeftPx}px`;\n        }, 0);\n    }\n    draggedEl.style.margin = \"0\";\n    // we can't have relative or automatic height and width or it will break the illusion\n    draggedEl.style.boxSizing = \"border-box\";\n    draggedEl.style.height = `${rect.height}px`;\n    draggedEl.style.width = `${rect.width}px`;\n    draggedEl.style.transition = `${trs(\"top\")}, ${trs(\"left\")}, ${trs(\"background-color\")}, ${trs(\"opacity\")}, ${trs(\"color\")} `;\n    // this is a workaround for a strange browser bug that causes the right border to disappear when all the transitions are added at the same time\n    window.setTimeout(() => (draggedEl.style.transition += `, ${trs(\"width\")}, ${trs(\"height\")}`), 0);\n    draggedEl.style.zIndex = \"9999\";\n    draggedEl.style.cursor = \"grabbing\";\n\n    return draggedEl;\n}\n\n/**\n * styles the dragged element to a 'dropped' state\n * @param {HTMLElement} draggedEl\n */\nexport function moveDraggedElementToWasDroppedState(draggedEl) {\n    draggedEl.style.cursor = \"grab\";\n}\n\n/**\n * Morphs the dragged element style, maintains the mouse pointer within the element\n * @param {HTMLElement} draggedEl\n * @param {HTMLElement} copyFromEl - the element the dragged element should look like, typically the shadow element\n * @param {number} currentMouseX\n * @param {number} currentMouseY\n */\nexport function morphDraggedElementToBeLike(draggedEl, copyFromEl, currentMouseX, currentMouseY) {\n    copyStylesFromTo(copyFromEl, draggedEl);\n    const newRect = copyFromEl.getBoundingClientRect();\n    const draggedElRect = draggedEl.getBoundingClientRect();\n    const widthChange = newRect.width - draggedElRect.width;\n    const heightChange = newRect.height - draggedElRect.height;\n    if (widthChange || heightChange) {\n        const relativeDistanceOfMousePointerFromDraggedSides = {\n            left: (currentMouseX - draggedElRect.left) / draggedElRect.width,\n            top: (currentMouseY - draggedElRect.top) / draggedElRect.height\n        };\n        if (!getFeatureFlag(FEATURE_FLAG_NAMES.USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT)) {\n            draggedEl.style.height = `${newRect.height}px`;\n            draggedEl.style.width = `${newRect.width}px`;\n        }\n        draggedEl.style.left = `${parseFloat(draggedEl.style.left) - relativeDistanceOfMousePointerFromDraggedSides.left * widthChange}px`;\n        draggedEl.style.top = `${parseFloat(draggedEl.style.top) - relativeDistanceOfMousePointerFromDraggedSides.top * heightChange}px`;\n    }\n}\n\n/**\n * @param {HTMLElement} copyFromEl\n * @param {HTMLElement} copyToEl\n */\nfunction copyStylesFromTo(copyFromEl, copyToEl) {\n    const computedStyle = window.getComputedStyle(copyFromEl);\n    Array.from(computedStyle)\n        .filter(\n            s =>\n                s.startsWith(\"background\") ||\n                s.startsWith(\"padding\") ||\n                s.startsWith(\"font\") ||\n                s.startsWith(\"text\") ||\n                s.startsWith(\"align\") ||\n                s.startsWith(\"justify\") ||\n                s.startsWith(\"display\") ||\n                s.startsWith(\"flex\") ||\n                s.startsWith(\"border\") ||\n                s === \"opacity\" ||\n                s === \"color\" ||\n                s === \"list-style-type\" ||\n                // copying with and height to make up for rect update timing issues in some browsers\n                (getFeatureFlag(FEATURE_FLAG_NAMES.USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT) && (s === \"width\" || s === \"height\"))\n        )\n        .forEach(s => copyToEl.style.setProperty(s, computedStyle.getPropertyValue(s), computedStyle.getPropertyPriority(s)));\n}\n\n/**\n * makes the element compatible with being draggable\n * @param {HTMLElement} draggableEl\n * @param {boolean} dragDisabled\n */\nexport function styleDraggable(draggableEl, dragDisabled) {\n    draggableEl.draggable = false;\n    draggableEl.ondragstart = () => false;\n    if (!dragDisabled) {\n        draggableEl.style.userSelect = \"none\";\n        draggableEl.style.WebkitUserSelect = \"none\";\n        draggableEl.style.cursor = \"grab\";\n    } else {\n        draggableEl.style.userSelect = \"\";\n        draggableEl.style.WebkitUserSelect = \"\";\n        draggableEl.style.cursor = \"\";\n    }\n}\n\n/**\n * Hides the provided element so that it can stay in the dom without interrupting\n * @param {HTMLElement} dragTarget\n */\nexport function hideElement(dragTarget) {\n    dragTarget.style.display = \"none\";\n    dragTarget.style.position = \"fixed\";\n    dragTarget.style.zIndex = \"-5\";\n}\n\n/**\n * styles the shadow element\n * @param {HTMLElement} shadowEl\n */\nexport function decorateShadowEl(shadowEl) {\n    shadowEl.style.visibility = \"hidden\";\n    shadowEl.setAttribute(SHADOW_ELEMENT_ATTRIBUTE_NAME, \"true\");\n}\n\n/**\n * undo the styles the shadow element\n * @param {HTMLElement} shadowEl\n */\nexport function unDecorateShadowElement(shadowEl) {\n    shadowEl.style.visibility = \"\";\n    shadowEl.removeAttribute(SHADOW_ELEMENT_ATTRIBUTE_NAME);\n}\n\n/**\n * will mark the given dropzones as visually active\n * @param {Array<HTMLElement>} dropZones\n * @param {Function} getStyles - maps a dropzone to a styles object (so the styles can be removed)\n * @param {Function} getClasses - maps a dropzone to a classList\n */\nexport function styleActiveDropZones(dropZones, getStyles = () => {}, getClasses = () => []) {\n    dropZones.forEach(dz => {\n        const styles = getStyles(dz);\n        Object.keys(styles).forEach(style => {\n            dz.style[style] = styles[style];\n        });\n        getClasses(dz).forEach(c => dz.classList.add(c));\n    });\n}\n\n/**\n * will remove the 'active' styling from given dropzones\n * @param {Array<HTMLElement>} dropZones\n * @param {Function} getStyles - maps a dropzone to a styles object\n * @param {Function} getClasses - maps a dropzone to a classList\n */\nexport function styleInactiveDropZones(dropZones, getStyles = () => {}, getClasses = () => []) {\n    dropZones.forEach(dz => {\n        const styles = getStyles(dz);\n        Object.keys(styles).forEach(style => {\n            dz.style[style] = \"\";\n        });\n        getClasses(dz).forEach(c => dz.classList.contains(c) && dz.classList.remove(c));\n    });\n}\n\n/**\n * will prevent the provided element from shrinking by setting its minWidth and minHeight to the current width and height values\n * @param {HTMLElement} el\n * @return {function(): void} - run this function to undo the operation and restore the original values\n */\nexport function preventShrinking(el) {\n    const originalMinHeight = el.style.minHeight;\n    el.style.minHeight = window.getComputedStyle(el).getPropertyValue(\"height\");\n    const originalMinWidth = el.style.minWidth;\n    el.style.minWidth = window.getComputedStyle(el).getPropertyValue(\"width\");\n    return function undo() {\n        el.style.minHeight = originalMinHeight;\n        el.style.minWidth = originalMinWidth;\n    };\n}\n","import {\n    decrementActiveDropZoneCount,\n    incrementActiveDropZoneCount,\n    ITEM_ID_KEY,\n    printDebug,\n    SHADOW_ITEM_MARKER_PROPERTY_NAME,\n    SHADOW_PLACEHOLDER_ITEM_ID,\n    SOURCES,\n    TRIGGERS\n} from \"./constants\";\nimport {observe, unobserve} from \"./helpers/observer\";\nimport {armWindowScroller, disarmWindowScroller} from \"./helpers/windowScroller\";\nimport {\n    createDraggedElementFrom,\n    decorateShadowEl,\n    hideElement,\n    morphDraggedElementToBeLike,\n    moveDraggedElementToWasDroppedState,\n    preventShrinking,\n    styleActiveDropZones,\n    styleDraggable,\n    styleInactiveDropZones,\n    unDecorateShadowElement\n} from \"./helpers/styler\";\nimport {\n    dispatchConsiderEvent,\n    dispatchFinalizeEvent,\n    DRAGGED_ENTERED_EVENT_NAME,\n    DRAGGED_LEFT_DOCUMENT_EVENT_NAME,\n    DRAGGED_LEFT_EVENT_NAME,\n    DRAGGED_LEFT_TYPES,\n    DRAGGED_OVER_INDEX_EVENT_NAME\n} from \"./helpers/dispatcher\";\nimport {areArraysShallowEqualSameOrder, areObjectsShallowEqual, toString} from \"./helpers/util\";\nimport {getBoundingRectNoTransforms} from \"./helpers/intersection\";\n\nconst DEFAULT_DROP_ZONE_TYPE = \"--any--\";\nconst MIN_OBSERVATION_INTERVAL_MS = 100;\nconst DISABLED_OBSERVATION_INTERVAL_MS = 20;\nconst MIN_MOVEMENT_BEFORE_DRAG_START_PX = 3;\nconst DEFAULT_DROP_TARGET_STYLE = {\n    outline: \"rgba(255, 255, 102, 0.7) solid 2px\"\n};\nconst ORIGINAL_DRAGGED_ITEM_MARKER_ATTRIBUTE = \"data-is-dnd-original-dragged-item\";\n\nlet originalDragTarget;\nlet draggedEl;\nlet draggedElData;\nlet draggedElType;\nlet originDropZone;\nlet originIndex;\nlet shadowElData;\nlet shadowElDropZone;\nlet dragStartMousePosition;\nlet currentMousePosition;\nlet isWorkingOnPreviousDrag = false;\nlet finalizingPreviousDrag = false;\nlet unlockOriginDzMinDimensions;\nlet isDraggedOutsideOfAnyDz = false;\nlet scheduledForRemovalAfterDrop = [];\n\n// a map from type to a set of drop-zones\nconst typeToDropZones = new Map();\n// important - this is needed because otherwise the config that would be used for everyone is the config of the element that created the event listeners\nconst dzToConfig = new Map();\n// this is needed in order to be able to cleanup old listeners and avoid stale closures issues (as the listener is defined within each zone)\nconst elToMouseDownListener = new WeakMap();\n\n/* drop-zones registration management */\nfunction registerDropZone(dropZoneEl, type) {\n    printDebug(() => \"registering drop-zone if absent\");\n    if (!typeToDropZones.has(type)) {\n        typeToDropZones.set(type, new Set());\n    }\n    if (!typeToDropZones.get(type).has(dropZoneEl)) {\n        typeToDropZones.get(type).add(dropZoneEl);\n        incrementActiveDropZoneCount();\n    }\n}\nfunction unregisterDropZone(dropZoneEl, type) {\n    typeToDropZones.get(type).delete(dropZoneEl);\n    decrementActiveDropZoneCount();\n    if (typeToDropZones.get(type).size === 0) {\n        typeToDropZones.delete(type);\n    }\n}\n\n/* functions to manage observing the dragged element and trigger custom drag-events */\nfunction watchDraggedElement() {\n    printDebug(() => \"watching dragged element\");\n    armWindowScroller();\n    const dropZones = typeToDropZones.get(draggedElType);\n    for (const dz of dropZones) {\n        dz.addEventListener(DRAGGED_ENTERED_EVENT_NAME, handleDraggedEntered);\n        dz.addEventListener(DRAGGED_LEFT_EVENT_NAME, handleDraggedLeft);\n        dz.addEventListener(DRAGGED_OVER_INDEX_EVENT_NAME, handleDraggedIsOverIndex);\n    }\n    window.addEventListener(DRAGGED_LEFT_DOCUMENT_EVENT_NAME, handleDrop);\n    // it is important that we don't have an interval that is faster than the flip duration because it can cause elements to jump bach and forth\n    const setIntervalMs = Math.max(...Array.from(dropZones.keys()).map(dz => dzToConfig.get(dz).dropAnimationDurationMs));\n    const observationIntervalMs = setIntervalMs === 0 ? DISABLED_OBSERVATION_INTERVAL_MS : Math.max(setIntervalMs, MIN_OBSERVATION_INTERVAL_MS); //if setintervalms is 0 it goes to 20, otherwise it is max between it and min observation.\n    observe(draggedEl, dropZones, observationIntervalMs * 1.07);\n}\nfunction unWatchDraggedElement() {\n    printDebug(() => \"unwatching dragged element\");\n    disarmWindowScroller();\n    const dropZones = typeToDropZones.get(draggedElType);\n    for (const dz of dropZones) {\n        dz.removeEventListener(DRAGGED_ENTERED_EVENT_NAME, handleDraggedEntered);\n        dz.removeEventListener(DRAGGED_LEFT_EVENT_NAME, handleDraggedLeft);\n        dz.removeEventListener(DRAGGED_OVER_INDEX_EVENT_NAME, handleDraggedIsOverIndex);\n    }\n    window.removeEventListener(DRAGGED_LEFT_DOCUMENT_EVENT_NAME, handleDrop);\n    unobserve();\n}\n\nfunction findShadowElementIdx(items) {\n    return items.findIndex(item => !!item[SHADOW_ITEM_MARKER_PROPERTY_NAME]);\n}\nfunction createShadowElData(draggedElData) {\n    return {...draggedElData, [SHADOW_ITEM_MARKER_PROPERTY_NAME]: true, [ITEM_ID_KEY]: SHADOW_PLACEHOLDER_ITEM_ID};\n}\n\n/* custom drag-events handlers */\nfunction handleDraggedEntered(e) {\n    printDebug(() => [\"dragged entered\", e.currentTarget, e.detail]);\n    let {items, dropFromOthersDisabled} = dzToConfig.get(e.currentTarget);\n    if (dropFromOthersDisabled && e.currentTarget !== originDropZone) {\n        printDebug(() => \"ignoring dragged entered because drop is currently disabled\");\n        return;\n    }\n    isDraggedOutsideOfAnyDz = false;\n    // this deals with another race condition. in rare occasions (super rapid operations) the list hasn't updated yet\n    items = items.filter(item => item[ITEM_ID_KEY] !== shadowElData[ITEM_ID_KEY]);\n    printDebug(() => `dragged entered items ${toString(items)}`);\n\n    if (originDropZone !== e.currentTarget) {\n        const originZoneItems = dzToConfig.get(originDropZone).items;\n        const newOriginZoneItems = originZoneItems.filter(item => !item[SHADOW_ITEM_MARKER_PROPERTY_NAME]);\n        dispatchConsiderEvent(originDropZone, newOriginZoneItems, {\n            trigger: TRIGGERS.DRAGGED_ENTERED_ANOTHER,\n            id: draggedElData[ITEM_ID_KEY],\n            source: SOURCES.POINTER\n        });\n    }\n    const {index, isProximityBased} = e.detail.indexObj;\n    const shadowElIdx = isProximityBased && index === e.currentTarget.children.length - 1 ? index + 1 : index;\n    shadowElDropZone = e.currentTarget;\n    items.splice(shadowElIdx, 0, shadowElData);\n    dispatchConsiderEvent(e.currentTarget, items, {trigger: TRIGGERS.DRAGGED_ENTERED, id: draggedElData[ITEM_ID_KEY], source: SOURCES.POINTER});\n}\n\nfunction handleDraggedLeft(e) {\n    // dealing with a rare race condition on extremely rapid clicking and dropping\n    if (!isWorkingOnPreviousDrag) return;\n    printDebug(() => [\"dragged left\", e.currentTarget, e.detail]);\n    const {items, dropFromOthersDisabled} = dzToConfig.get(e.currentTarget);\n    if (dropFromOthersDisabled && e.currentTarget !== originDropZone && e.currentTarget !== shadowElDropZone) {\n        printDebug(() => \"drop is currently disabled\");\n        return;\n    }\n    const shadowElIdx = findShadowElementIdx(items);\n    if (shadowElIdx !== -1) {\n        items.splice(shadowElIdx, 1);\n    }\n    shadowElDropZone = undefined;\n    const {type, theOtherDz} = e.detail;\n    if (\n        type === DRAGGED_LEFT_TYPES.OUTSIDE_OF_ANY ||\n        (type === DRAGGED_LEFT_TYPES.LEFT_FOR_ANOTHER && theOtherDz !== originDropZone && dzToConfig.get(theOtherDz).dropFromOthersDisabled)\n    ) {\n        printDebug(() => \"dragged left all, putting shadow element back in the origin dz\");\n        isDraggedOutsideOfAnyDz = true;\n        shadowElDropZone = originDropZone;\n        const originZoneItems = dzToConfig.get(originDropZone).items;\n        originZoneItems.splice(originIndex, 0, shadowElData);\n        dispatchConsiderEvent(originDropZone, originZoneItems, {\n            trigger: TRIGGERS.DRAGGED_LEFT_ALL,\n            id: draggedElData[ITEM_ID_KEY],\n            source: SOURCES.POINTER\n        });\n    }\n    // for the origin dz, when the dragged is outside of any, this will be fired in addition to the previous. this is for simplicity\n    dispatchConsiderEvent(e.currentTarget, items, {\n        trigger: TRIGGERS.DRAGGED_LEFT,\n        id: draggedElData[ITEM_ID_KEY],\n        source: SOURCES.POINTER\n    });\n}\nfunction handleDraggedIsOverIndex(e) {\n    printDebug(() => [\"dragged is over index\", e.currentTarget, e.detail]);\n    const {items, dropFromOthersDisabled} = dzToConfig.get(e.currentTarget);\n    if (dropFromOthersDisabled && e.currentTarget !== originDropZone) {\n        printDebug(() => \"drop is currently disabled\");\n        return;\n    }\n    isDraggedOutsideOfAnyDz = false;\n    const {index} = e.detail.indexObj;\n    const shadowElIdx = findShadowElementIdx(items);\n    if (shadowElIdx !== -1) {\n        items.splice(shadowElIdx, 1);\n    }\n    items.splice(index, 0, shadowElData);\n    dispatchConsiderEvent(e.currentTarget, items, {trigger: TRIGGERS.DRAGGED_OVER_INDEX, id: draggedElData[ITEM_ID_KEY], source: SOURCES.POINTER});\n}\n\n// Global mouse/touch-events handlers\nfunction handleMouseMove(e) {\n    e.preventDefault();\n    const c = e.touches ? e.touches[0] : e;\n    currentMousePosition = {x: c.clientX, y: c.clientY};\n    draggedEl.style.transform = `translate3d(${currentMousePosition.x - dragStartMousePosition.x}px, ${\n        currentMousePosition.y - dragStartMousePosition.y\n    }px, 0)`;\n}\n\nfunction handleDrop() {\n    printDebug(() => \"dropped\");\n    finalizingPreviousDrag = true;\n    // cleanup\n    window.removeEventListener(\"mousemove\", handleMouseMove);\n    window.removeEventListener(\"touchmove\", handleMouseMove);\n    window.removeEventListener(\"mouseup\", handleDrop);\n    window.removeEventListener(\"touchend\", handleDrop);\n    unWatchDraggedElement();\n    moveDraggedElementToWasDroppedState(draggedEl);\n\n    if (!shadowElDropZone) {\n        printDebug(() => \"element was dropped right after it left origin but before entering somewhere else\");\n        shadowElDropZone = originDropZone;\n    }\n    printDebug(() => [\"dropped in dz\", shadowElDropZone]);\n    let {items, type} = dzToConfig.get(shadowElDropZone);\n    styleInactiveDropZones(\n        typeToDropZones.get(type),\n        dz => dzToConfig.get(dz).dropTargetStyle,\n        dz => dzToConfig.get(dz).dropTargetClasses\n    );\n    let shadowElIdx = findShadowElementIdx(items);\n    // the handler might remove the shadow element, ex: dragula like copy on drag\n    if (shadowElIdx === -1) {\n        if (shadowElDropZone === originDropZone) {\n            shadowElIdx = originIndex;\n        } else if (shadowElDropZone.children.length > 0) {\n            shadowElIdx = shadowElDropZone.children.length - 1;\n        }\n    }\n\n    items = items.map(item => (item[SHADOW_ITEM_MARKER_PROPERTY_NAME] ? draggedElData : item));\n    function finalizeWithinZone() {\n        unlockOriginDzMinDimensions();\n        dispatchFinalizeEvent(shadowElDropZone, items, {\n            trigger: isDraggedOutsideOfAnyDz ? TRIGGERS.DROPPED_OUTSIDE_OF_ANY : TRIGGERS.DROPPED_INTO_ZONE,\n            id: draggedElData[ITEM_ID_KEY],\n            source: SOURCES.POINTER\n        });\n        if (shadowElDropZone !== originDropZone) {\n            // letting the origin drop zone know the element was permanently taken away\n            dispatchFinalizeEvent(originDropZone, dzToConfig.get(originDropZone).items, {\n                trigger: TRIGGERS.DROPPED_INTO_ANOTHER,\n                id: draggedElData[ITEM_ID_KEY],\n                source: SOURCES.POINTER\n            });\n        }\n        if (shadowElIdx !== -1) unDecorateShadowElement(shadowElDropZone.children[shadowElIdx]);\n        cleanupPostDrop();\n    }\n    if (shadowElIdx !== -1) animateDraggedToFinalPosition(shadowElIdx, finalizeWithinZone);\n}\n\n// helper function for handleDrop\nfunction animateDraggedToFinalPosition(shadowElIdx, callback) {\n    const shadowElRect = getBoundingRectNoTransforms(shadowElDropZone.children[shadowElIdx]);\n    const newTransform = {\n        x: shadowElRect.left - parseFloat(draggedEl.style.left),\n        y: shadowElRect.top - parseFloat(draggedEl.style.top)\n    };\n    const {dropAnimationDurationMs} = dzToConfig.get(shadowElDropZone);\n    const transition = `transform ${dropAnimationDurationMs}ms ease`;\n    draggedEl.style.transition = draggedEl.style.transition ? draggedEl.style.transition + \",\" + transition : transition;\n    draggedEl.style.transform = `translate3d(${newTransform.x}px, ${newTransform.y}px, 0)`;\n    window.setTimeout(callback, dropAnimationDurationMs);\n}\n\nfunction scheduleDZForRemovalAfterDrop(dz, destroy) {\n    scheduledForRemovalAfterDrop.push({dz, destroy});\n    window.requestAnimationFrame(() => {\n        hideElement(dz);\n        document.body.appendChild(dz);\n    });\n}\n/* cleanup */\nfunction cleanupPostDrop() {\n    draggedEl.remove();\n    originalDragTarget.remove();\n    if (scheduledForRemovalAfterDrop.length) {\n        printDebug(() => [\"will destroy zones that were removed during drag\", scheduledForRemovalAfterDrop]);\n        scheduledForRemovalAfterDrop.forEach(({dz, destroy}) => {\n            destroy();\n            dz.remove();\n        });\n        scheduledForRemovalAfterDrop = [];\n    }\n    draggedEl = undefined;\n    originalDragTarget = undefined;\n    draggedElData = undefined;\n    draggedElType = undefined;\n    originDropZone = undefined;\n    originIndex = undefined;\n    shadowElData = undefined;\n    shadowElDropZone = undefined;\n    dragStartMousePosition = undefined;\n    currentMousePosition = undefined;\n    isWorkingOnPreviousDrag = false;\n    finalizingPreviousDrag = false;\n    unlockOriginDzMinDimensions = undefined;\n    isDraggedOutsideOfAnyDz = false;\n}\n\nexport function dndzone(node, options) {\n    let initialized = false;\n    const config = {\n        items: undefined,\n        type: undefined,\n        flipDurationMs: 0,\n        dragDisabled: false,\n        morphDisabled: false,\n        dropFromOthersDisabled: false,\n        dropTargetStyle: DEFAULT_DROP_TARGET_STYLE,\n        dropTargetClasses: [],\n        transformDraggedElement: () => {},\n        centreDraggedOnCursor: false\n    };\n    printDebug(() => [`dndzone good to go options: ${toString(options)}, config: ${toString(config)}`, {node}]);\n    let elToIdx = new Map();\n\n    function addMaybeListeners() {\n        window.addEventListener(\"mousemove\", handleMouseMoveMaybeDragStart, {passive: false});\n        window.addEventListener(\"touchmove\", handleMouseMoveMaybeDragStart, {passive: false, capture: false});\n        window.addEventListener(\"mouseup\", handleFalseAlarm, {passive: false});\n        window.addEventListener(\"touchend\", handleFalseAlarm, {passive: false});\n    }\n    function removeMaybeListeners() {\n        window.removeEventListener(\"mousemove\", handleMouseMoveMaybeDragStart);\n        window.removeEventListener(\"touchmove\", handleMouseMoveMaybeDragStart);\n        window.removeEventListener(\"mouseup\", handleFalseAlarm);\n        window.removeEventListener(\"touchend\", handleFalseAlarm);\n    }\n    function handleFalseAlarm() {\n        removeMaybeListeners();\n        originalDragTarget = undefined;\n        dragStartMousePosition = undefined;\n        currentMousePosition = undefined;\n    }\n\n    function handleMouseMoveMaybeDragStart(e) {\n        e.preventDefault();\n        const c = e.touches ? e.touches[0] : e;\n        currentMousePosition = {x: c.clientX, y: c.clientY};\n        if (\n            Math.abs(currentMousePosition.x - dragStartMousePosition.x) >= MIN_MOVEMENT_BEFORE_DRAG_START_PX ||\n            Math.abs(currentMousePosition.y - dragStartMousePosition.y) >= MIN_MOVEMENT_BEFORE_DRAG_START_PX\n        ) {\n            removeMaybeListeners();\n            handleDragStart();\n        }\n    }\n    function handleMouseDown(e) {\n        // on safari clicking on a select element doesn't fire mouseup at the end of the click and in general this makes more sense\n        if (e.target !== e.currentTarget && (e.target.value !== undefined || e.target.isContentEditable)) {\n            printDebug(() => \"won't initiate drag on a nested input element\");\n            return;\n        }\n        // prevents responding to any button but left click which equals 0 (which is falsy)\n        if (e.button) {\n            printDebug(() => `ignoring none left click button: ${e.button}`);\n            return;\n        }\n        if (isWorkingOnPreviousDrag) {\n            printDebug(() => \"cannot start a new drag before finalizing previous one\");\n            return;\n        }\n        e.stopPropagation();\n        const c = e.touches ? e.touches[0] : e;\n        dragStartMousePosition = {x: c.clientX, y: c.clientY};\n        currentMousePosition = {...dragStartMousePosition};\n        originalDragTarget = e.currentTarget;\n        addMaybeListeners();\n    }\n\n    function handleDragStart() {\n        printDebug(() => [`drag start config: ${toString(config)}`, originalDragTarget]);\n        isWorkingOnPreviousDrag = true;\n\n        // initialising globals\n        const currentIdx = elToIdx.get(originalDragTarget);\n        originIndex = currentIdx;\n        originDropZone = originalDragTarget.parentElement;\n        /** @type {ShadowRoot | HTMLDocument | Element } */\n        const rootNode = originDropZone.closest(\"dialog\") || originDropZone.getRootNode();\n        const originDropZoneRoot = rootNode.body || rootNode;\n        const {items, type, centreDraggedOnCursor} = config;\n        draggedElData = items[currentIdx];\n        draggedElType = type;\n        shadowElData = createShadowElData(draggedElData);\n\n        // creating the draggable element\n        draggedEl = createDraggedElementFrom(originalDragTarget, centreDraggedOnCursor && currentMousePosition);\n        originalDragTarget.setAttribute(ORIGINAL_DRAGGED_ITEM_MARKER_ATTRIBUTE, true);\n\n        // We will keep the original dom node in the dom because touch events keep firing on it, we want to re-add it after the framework removes it\n        function keepOriginalElementInDom() {\n            if (!draggedEl.parentElement) {\n                originDropZoneRoot.appendChild(draggedEl);\n                // to prevent the outline from disappearing\n                draggedEl.focus();\n                watchDraggedElement();\n                hideElement(originalDragTarget);\n                originDropZoneRoot.appendChild(originalDragTarget);\n            } else {\n                window.requestAnimationFrame(keepOriginalElementInDom);\n            }\n        }\n        window.requestAnimationFrame(keepOriginalElementInDom);\n\n        styleActiveDropZones(\n            Array.from(typeToDropZones.get(config.type)).filter(dz => dz === originDropZone || !dzToConfig.get(dz).dropFromOthersDisabled),\n            dz => dzToConfig.get(dz).dropTargetStyle,\n            dz => dzToConfig.get(dz).dropTargetClasses\n        );\n\n        // removing the original element by removing its data entry\n        items.splice(currentIdx, 1, shadowElData);\n        unlockOriginDzMinDimensions = preventShrinking(originDropZone);\n\n        dispatchConsiderEvent(originDropZone, items, {trigger: TRIGGERS.DRAG_STARTED, id: draggedElData[ITEM_ID_KEY], source: SOURCES.POINTER});\n\n        // handing over to global handlers - starting to watch the element\n        window.addEventListener(\"mousemove\", handleMouseMove, {passive: false});\n        window.addEventListener(\"touchmove\", handleMouseMove, {passive: false, capture: false});\n        window.addEventListener(\"mouseup\", handleDrop, {passive: false});\n        window.addEventListener(\"touchend\", handleDrop, {passive: false});\n    }\n\n    function configure({\n        items = undefined,\n        flipDurationMs: dropAnimationDurationMs = 0,\n        type: newType = DEFAULT_DROP_ZONE_TYPE,\n        dragDisabled = false,\n        morphDisabled = false,\n        dropFromOthersDisabled = false,\n        dropTargetStyle = DEFAULT_DROP_TARGET_STYLE,\n        dropTargetClasses = [],\n        transformDraggedElement = () => {},\n        centreDraggedOnCursor = false\n    }) {\n        config.dropAnimationDurationMs = dropAnimationDurationMs;\n        if (config.type && newType !== config.type) {\n            unregisterDropZone(node, config.type);\n        }\n        config.type = newType;\n        config.items = [...items];\n        config.dragDisabled = dragDisabled;\n        config.morphDisabled = morphDisabled;\n        config.transformDraggedElement = transformDraggedElement;\n        config.centreDraggedOnCursor = centreDraggedOnCursor;\n\n        // realtime update for dropTargetStyle\n        if (\n            initialized &&\n            isWorkingOnPreviousDrag &&\n            !finalizingPreviousDrag &&\n            (!areObjectsShallowEqual(dropTargetStyle, config.dropTargetStyle) ||\n                !areArraysShallowEqualSameOrder(dropTargetClasses, config.dropTargetClasses))\n        ) {\n            styleInactiveDropZones(\n                [node],\n                () => config.dropTargetStyle,\n                () => dropTargetClasses\n            );\n            styleActiveDropZones(\n                [node],\n                () => dropTargetStyle,\n                () => dropTargetClasses\n            );\n        }\n        config.dropTargetStyle = dropTargetStyle;\n        config.dropTargetClasses = [...dropTargetClasses];\n\n        // realtime update for dropFromOthersDisabled\n        function getConfigProp(dz, propName) {\n            return dzToConfig.get(dz) ? dzToConfig.get(dz)[propName] : config[propName];\n        }\n        if (initialized && isWorkingOnPreviousDrag && config.dropFromOthersDisabled !== dropFromOthersDisabled) {\n            if (dropFromOthersDisabled) {\n                styleInactiveDropZones(\n                    [node],\n                    dz => getConfigProp(dz, \"dropTargetStyle\"),\n                    dz => getConfigProp(dz, \"dropTargetClasses\")\n                );\n            } else {\n                styleActiveDropZones(\n                    [node],\n                    dz => getConfigProp(dz, \"dropTargetStyle\"),\n                    dz => getConfigProp(dz, \"dropTargetClasses\")\n                );\n            }\n        }\n        config.dropFromOthersDisabled = dropFromOthersDisabled;\n\n        dzToConfig.set(node, config);\n        registerDropZone(node, newType);\n        const shadowElIdx = findShadowElementIdx(config.items);\n        for (let idx = 0; idx < node.children.length; idx++) {\n            const draggableEl = node.children[idx];\n            styleDraggable(draggableEl, dragDisabled);\n            if (idx === shadowElIdx) {\n                config.transformDraggedElement(draggedEl, draggedElData, idx);\n                if (!morphDisabled) {\n                    morphDraggedElementToBeLike(draggedEl, draggableEl, currentMousePosition.x, currentMousePosition.y);\n                }\n                decorateShadowEl(draggableEl);\n                continue;\n            }\n            draggableEl.removeEventListener(\"mousedown\", elToMouseDownListener.get(draggableEl));\n            draggableEl.removeEventListener(\"touchstart\", elToMouseDownListener.get(draggableEl));\n            if (!dragDisabled) {\n                draggableEl.addEventListener(\"mousedown\", handleMouseDown);\n                draggableEl.addEventListener(\"touchstart\", handleMouseDown);\n                elToMouseDownListener.set(draggableEl, handleMouseDown);\n            }\n            // updating the idx\n            elToIdx.set(draggableEl, idx);\n\n            if (!initialized) {\n                initialized = true;\n            }\n        }\n    }\n    configure(options);\n\n    return {\n        update: newOptions => {\n            printDebug(() => `pointer dndzone will update newOptions: ${toString(newOptions)}`);\n            configure(newOptions);\n        },\n        destroy: () => {\n            function destroyDz() {\n                printDebug(() => \"pointer dndzone will destroy\");\n                unregisterDropZone(node, dzToConfig.get(node).type);\n                dzToConfig.delete(node);\n            }\n            if (isWorkingOnPreviousDrag && !node.closest(`[${ORIGINAL_DRAGGED_ITEM_MARKER_ATTRIBUTE}]`)) {\n                printDebug(() => \"pointer dndzone will be scheduled for destruction\");\n                scheduleDZForRemovalAfterDrop(node, destroyDz);\n            } else {\n                destroyDz();\n            }\n        }\n    };\n}\n","/**\n * Fixes svelte issue when cloning node containing (or being) <select> which will loose it's value.\n * Since svelte manages select value internally.\n * @see https://github.com/sveltejs/svelte/issues/6717\n * @see https://github.com/isaacHagoel/svelte-dnd-action/issues/306\n *\n * @param {HTMLElement} el\n * @returns\n */\nexport function svelteNodeClone(el) {\n    const cloned = el.cloneNode(true);\n\n    const values = [];\n    const elIsSelect = el.tagName === \"SELECT\";\n    const selects = elIsSelect ? [el] : [...el.querySelectorAll(\"select\")];\n    for (const select of selects) {\n        values.push(select.value);\n    }\n\n    if (selects.length > 0) {\n        const clonedSelects = elIsSelect ? [cloned] : [...cloned.querySelectorAll(\"select\")];\n        for (let i = 0; i < clonedSelects.length; i++) {\n            const select = clonedSelects[i];\n            const value = values[i];\n            const optionEl = select.querySelector(`option[value=\"${value}\"`);\n            if (optionEl) {\n                optionEl.setAttribute(\"selected\", true);\n            }\n        }\n    }\n\n    const elIsCanvas = el.tagName === \"CANVAS\";\n    const canvases = elIsCanvas ? [el] : [...el.querySelectorAll(\"canvas\")];\n    if (canvases.length > 0) {\n        const clonedCanvases = elIsCanvas ? [cloned] : [...cloned.querySelectorAll(\"canvas\")];\n        for (let i = 0; i < clonedCanvases.length; i++) {\n            const canvas = canvases[i];\n            const clonedCanvas = clonedCanvases[i];\n            clonedCanvas.width = canvas.width;\n            clonedCanvas.height = canvas.height;\n            clonedCanvas.getContext(\"2d\").drawImage(canvas, 0, 0);\n        }\n    }\n\n    return cloned;\n}\n","import {isOnServer} from \"../constants\";\n\nconst INSTRUCTION_IDs = {\n    DND_ZONE_ACTIVE: \"dnd-zone-active\",\n    DND_ZONE_DRAG_DISABLED: \"dnd-zone-drag-disabled\"\n};\nconst ID_TO_INSTRUCTION = {\n    [INSTRUCTION_IDs.DND_ZONE_ACTIVE]: \"Tab to one the items and press space-bar or enter to start dragging it\",\n    [INSTRUCTION_IDs.DND_ZONE_DRAG_DISABLED]: \"This is a disabled drag and drop list\"\n};\n\nconst ALERT_DIV_ID = \"dnd-action-aria-alert\";\nlet alertsDiv;\n\nfunction initAriaOnBrowser() {\n    if (alertsDiv) {\n        // it is already initialized\n        return;\n    }\n    // setting the dynamic alerts\n    alertsDiv = document.createElement(\"div\");\n    (function initAlertsDiv() {\n        alertsDiv.id = ALERT_DIV_ID;\n        // tab index -1 makes the alert be read twice on chrome for some reason\n        //alertsDiv.tabIndex = -1;\n        alertsDiv.style.position = \"fixed\";\n        alertsDiv.style.bottom = \"0\";\n        alertsDiv.style.left = \"0\";\n        alertsDiv.style.zIndex = \"-5\";\n        alertsDiv.style.opacity = \"0\";\n        alertsDiv.style.height = \"0\";\n        alertsDiv.style.width = \"0\";\n        alertsDiv.setAttribute(\"role\", \"alert\");\n    })();\n    document.body.prepend(alertsDiv);\n\n    // setting the instructions\n    Object.entries(ID_TO_INSTRUCTION).forEach(([id, txt]) => document.body.prepend(instructionToHiddenDiv(id, txt)));\n}\n\n/**\n * Initializes the static aria instructions so they can be attached to zones\n * @return {{DND_ZONE_ACTIVE: string, DND_ZONE_DRAG_DISABLED: string} | null} - the IDs for static aria instruction (to be used via aria-describedby) or null on the server\n */\nexport function initAria() {\n    if (isOnServer) return null;\n    if (document.readyState === \"complete\") {\n        initAriaOnBrowser();\n    } else {\n        window.addEventListener(\"DOMContentLoaded\", initAriaOnBrowser);\n    }\n    return {...INSTRUCTION_IDs};\n}\n\n/**\n * Removes all the artifacts (dom elements) added by this module\n */\nexport function destroyAria() {\n    if (isOnServer || !alertsDiv) return;\n    Object.keys(ID_TO_INSTRUCTION).forEach(id => document.getElementById(id)?.remove());\n    alertsDiv.remove();\n    alertsDiv = undefined;\n}\n\nfunction instructionToHiddenDiv(id, txt) {\n    const div = document.createElement(\"div\");\n    div.id = id;\n    div.innerHTML = `<p>${txt}</p>`;\n    div.style.display = \"none\";\n    div.style.position = \"fixed\";\n    div.style.zIndex = \"-5\";\n    return div;\n}\n\n/**\n * Will make the screen reader alert the provided text to the user\n * @param {string} txt\n */\nexport function alertToScreenReader(txt) {\n    if (isOnServer) return;\n    if (!alertsDiv) {\n        initAriaOnBrowser();\n    }\n    alertsDiv.innerHTML = \"\";\n    const alertText = document.createTextNode(txt);\n    alertsDiv.appendChild(alertText);\n    // this is needed for Safari\n    alertsDiv.style.display = \"none\";\n    alertsDiv.style.display = \"inline\";\n}\n","import {decrementActiveDropZoneCount, incrementActiveDropZoneCount, ITEM_ID_KEY, SOURCES, TRIGGERS} from \"./constants\";\nimport {styleActiveDropZones, styleInactiveDropZones} from \"./helpers/styler\";\nimport {dispatchConsiderEvent, dispatchFinalizeEvent} from \"./helpers/dispatcher\";\nimport {initAria, alertToScreenReader, destroyAria} from \"./helpers/aria\";\nimport {toString} from \"./helpers/util\";\nimport {printDebug} from \"./constants\";\n\nconst DEFAULT_DROP_ZONE_TYPE = \"--any--\";\nconst DEFAULT_DROP_TARGET_STYLE = {\n    outline: \"rgba(255, 255, 102, 0.7) solid 2px\"\n};\n\nlet isDragging = false;\nlet draggedItemType;\nlet focusedDz;\nlet focusedDzLabel = \"\";\nlet focusedItem;\nlet focusedItemId;\nlet focusedItemLabel = \"\";\nconst allDragTargets = new WeakSet();\nconst elToKeyDownListeners = new WeakMap();\nconst elToFocusListeners = new WeakMap();\nconst dzToHandles = new Map();\nconst dzToConfig = new Map();\nconst typeToDropZones = new Map();\n\n/* TODO (potentially)\n * what's the deal with the black border of voice-reader not following focus?\n * maybe keep focus on the last dragged item upon drop?\n */\n\nlet INSTRUCTION_IDs;\n\n/* drop-zones registration management */\nfunction registerDropZone(dropZoneEl, type) {\n    printDebug(() => \"registering drop-zone if absent\");\n    if (typeToDropZones.size === 0) {\n        printDebug(() => \"adding global keydown and click handlers\");\n        INSTRUCTION_IDs = initAria();\n        window.addEventListener(\"keydown\", globalKeyDownHandler);\n        window.addEventListener(\"click\", globalClickHandler);\n    }\n    if (!typeToDropZones.has(type)) {\n        typeToDropZones.set(type, new Set());\n    }\n    if (!typeToDropZones.get(type).has(dropZoneEl)) {\n        typeToDropZones.get(type).add(dropZoneEl);\n        incrementActiveDropZoneCount();\n    }\n}\nfunction unregisterDropZone(dropZoneEl, type) {\n    printDebug(() => \"unregistering drop-zone\");\n    if (focusedDz === dropZoneEl) {\n        handleDrop();\n    }\n    typeToDropZones.get(type).delete(dropZoneEl);\n    decrementActiveDropZoneCount();\n    if (typeToDropZones.get(type).size === 0) {\n        typeToDropZones.delete(type);\n    }\n    if (typeToDropZones.size === 0) {\n        printDebug(() => \"removing global keydown and click handlers\");\n        window.removeEventListener(\"keydown\", globalKeyDownHandler);\n        window.removeEventListener(\"click\", globalClickHandler);\n        INSTRUCTION_IDs = undefined;\n        destroyAria();\n    }\n}\n\nfunction globalKeyDownHandler(e) {\n    if (!isDragging) return;\n    switch (e.key) {\n        case \"Escape\": {\n            handleDrop();\n            break;\n        }\n    }\n}\n\nfunction globalClickHandler() {\n    if (!isDragging) return;\n    if (!allDragTargets.has(document.activeElement)) {\n        printDebug(() => \"clicked outside of any draggable\");\n        handleDrop();\n    }\n}\n\nfunction handleZoneFocus(e) {\n    printDebug(() => \"zone focus\");\n    if (!isDragging) return;\n    const newlyFocusedDz = e.currentTarget;\n    if (newlyFocusedDz === focusedDz) return;\n\n    focusedDzLabel = newlyFocusedDz.getAttribute(\"aria-label\") || \"\";\n    const {items: originItems} = dzToConfig.get(focusedDz);\n    const originItem = originItems.find(item => item[ITEM_ID_KEY] === focusedItemId);\n    const originIdx = originItems.indexOf(originItem);\n    const itemToMove = originItems.splice(originIdx, 1)[0];\n    const {items: targetItems, autoAriaDisabled} = dzToConfig.get(newlyFocusedDz);\n    if (\n        newlyFocusedDz.getBoundingClientRect().top < focusedDz.getBoundingClientRect().top ||\n        newlyFocusedDz.getBoundingClientRect().left < focusedDz.getBoundingClientRect().left\n    ) {\n        targetItems.push(itemToMove);\n        if (!autoAriaDisabled) {\n            alertToScreenReader(`Moved item ${focusedItemLabel} to the end of the list ${focusedDzLabel}`);\n        }\n    } else {\n        targetItems.unshift(itemToMove);\n        if (!autoAriaDisabled) {\n            alertToScreenReader(`Moved item ${focusedItemLabel} to the beginning of the list ${focusedDzLabel}`);\n        }\n    }\n    const dzFrom = focusedDz;\n    dispatchFinalizeEvent(dzFrom, originItems, {trigger: TRIGGERS.DROPPED_INTO_ANOTHER, id: focusedItemId, source: SOURCES.KEYBOARD});\n    dispatchFinalizeEvent(newlyFocusedDz, targetItems, {trigger: TRIGGERS.DROPPED_INTO_ZONE, id: focusedItemId, source: SOURCES.KEYBOARD});\n    focusedDz = newlyFocusedDz;\n}\n\nfunction triggerAllDzsUpdate() {\n    dzToHandles.forEach(({update}, dz) => update(dzToConfig.get(dz)));\n}\n\nfunction handleDrop(dispatchConsider = true) {\n    printDebug(() => \"drop\");\n    if (!dzToConfig.get(focusedDz).autoAriaDisabled) {\n        alertToScreenReader(`Stopped dragging item ${focusedItemLabel}`);\n    }\n    if (allDragTargets.has(document.activeElement)) {\n        document.activeElement.blur();\n    }\n    if (dispatchConsider) {\n        dispatchConsiderEvent(focusedDz, dzToConfig.get(focusedDz).items, {\n            trigger: TRIGGERS.DRAG_STOPPED,\n            id: focusedItemId,\n            source: SOURCES.KEYBOARD\n        });\n    }\n    styleInactiveDropZones(\n        typeToDropZones.get(draggedItemType),\n        dz => dzToConfig.get(dz).dropTargetStyle,\n        dz => dzToConfig.get(dz).dropTargetClasses\n    );\n    focusedItem = null;\n    focusedItemId = null;\n    focusedItemLabel = \"\";\n    draggedItemType = null;\n    focusedDz = null;\n    focusedDzLabel = \"\";\n    isDragging = false;\n    triggerAllDzsUpdate();\n}\n//////\nexport function dndzone(node, options) {\n    const config = {\n        items: undefined,\n        type: undefined,\n        dragDisabled: false,\n        zoneTabIndex: 0,\n        zoneItemTabIndex: 0,\n        dropFromOthersDisabled: false,\n        dropTargetStyle: DEFAULT_DROP_TARGET_STYLE,\n        dropTargetClasses: [],\n        autoAriaDisabled: false\n    };\n\n    function swap(arr, i, j) {\n        if (arr.length <= 1) return;\n        arr.splice(j, 1, arr.splice(i, 1, arr[j])[0]);\n    }\n\n    function handleKeyDown(e) {\n        printDebug(() => [\"handling key down\", e.key]);\n        switch (e.key) {\n            case \"Enter\":\n            case \" \": {\n                // we don't want to affect nested input elements or clickable elements\n                if ((e.target.disabled !== undefined || e.target.href || e.target.isContentEditable) && !allDragTargets.has(e.target)) {\n                    return;\n                }\n                e.preventDefault(); // preventing scrolling on spacebar\n                e.stopPropagation();\n                if (isDragging) {\n                    // TODO - should this trigger a drop? only here or in general (as in when hitting space or enter outside of any zone)?\n                    handleDrop();\n                } else {\n                    // drag start\n                    handleDragStart(e);\n                }\n                break;\n            }\n            case \"ArrowDown\":\n            case \"ArrowRight\": {\n                if (!isDragging) return;\n                e.preventDefault(); // prevent scrolling\n                e.stopPropagation();\n                const {items} = dzToConfig.get(node);\n                const children = Array.from(node.children);\n                const idx = children.indexOf(e.currentTarget);\n                printDebug(() => [\"arrow down\", idx]);\n                if (idx < children.length - 1) {\n                    if (!config.autoAriaDisabled) {\n                        alertToScreenReader(`Moved item ${focusedItemLabel} to position ${idx + 2} in the list ${focusedDzLabel}`);\n                    }\n                    swap(items, idx, idx + 1);\n                    dispatchFinalizeEvent(node, items, {trigger: TRIGGERS.DROPPED_INTO_ZONE, id: focusedItemId, source: SOURCES.KEYBOARD});\n                }\n                break;\n            }\n            case \"ArrowUp\":\n            case \"ArrowLeft\": {\n                if (!isDragging) return;\n                e.preventDefault(); // prevent scrolling\n                e.stopPropagation();\n                const {items} = dzToConfig.get(node);\n                const children = Array.from(node.children);\n                const idx = children.indexOf(e.currentTarget);\n                printDebug(() => [\"arrow up\", idx]);\n                if (idx > 0) {\n                    if (!config.autoAriaDisabled) {\n                        alertToScreenReader(`Moved item ${focusedItemLabel} to position ${idx} in the list ${focusedDzLabel}`);\n                    }\n                    swap(items, idx, idx - 1);\n                    dispatchFinalizeEvent(node, items, {trigger: TRIGGERS.DROPPED_INTO_ZONE, id: focusedItemId, source: SOURCES.KEYBOARD});\n                }\n                break;\n            }\n        }\n    }\n    function handleDragStart(e) {\n        printDebug(() => \"drag start\");\n        setCurrentFocusedItem(e.currentTarget);\n        focusedDz = node;\n        draggedItemType = config.type;\n        isDragging = true;\n        const dropTargets = Array.from(typeToDropZones.get(config.type)).filter(dz => dz === focusedDz || !dzToConfig.get(dz).dropFromOthersDisabled);\n        styleActiveDropZones(\n            dropTargets,\n            dz => dzToConfig.get(dz).dropTargetStyle,\n            dz => dzToConfig.get(dz).dropTargetClasses\n        );\n        if (!config.autoAriaDisabled) {\n            let msg = `Started dragging item ${focusedItemLabel}. Use the arrow keys to move it within its list ${focusedDzLabel}`;\n            if (dropTargets.length > 1) {\n                msg += `, or tab to another list in order to move the item into it`;\n            }\n            alertToScreenReader(msg);\n        }\n        dispatchConsiderEvent(node, dzToConfig.get(node).items, {trigger: TRIGGERS.DRAG_STARTED, id: focusedItemId, source: SOURCES.KEYBOARD});\n        triggerAllDzsUpdate();\n    }\n\n    function handleClick(e) {\n        if (!isDragging) return;\n        if (e.currentTarget === focusedItem) return;\n        e.stopPropagation();\n        handleDrop(false);\n        handleDragStart(e);\n    }\n    function setCurrentFocusedItem(draggableEl) {\n        const {items} = dzToConfig.get(node);\n        const children = Array.from(node.children);\n        const focusedItemIdx = children.indexOf(draggableEl);\n        focusedItem = draggableEl;\n        focusedItem.tabIndex = config.zoneItemTabIndex;\n        focusedItemId = items[focusedItemIdx][ITEM_ID_KEY];\n        focusedItemLabel = children[focusedItemIdx].getAttribute(\"aria-label\") || \"\";\n    }\n\n    function configure({\n        items = [],\n        type: newType = DEFAULT_DROP_ZONE_TYPE,\n        dragDisabled = false,\n        zoneTabIndex = 0,\n        zoneItemTabIndex = 0,\n        dropFromOthersDisabled = false,\n        dropTargetStyle = DEFAULT_DROP_TARGET_STYLE,\n        dropTargetClasses = [],\n        autoAriaDisabled = false\n    }) {\n        config.items = [...items];\n        config.dragDisabled = dragDisabled;\n        config.dropFromOthersDisabled = dropFromOthersDisabled;\n        config.zoneTabIndex = zoneTabIndex;\n        config.zoneItemTabIndex = zoneItemTabIndex;\n        config.dropTargetStyle = dropTargetStyle;\n        config.dropTargetClasses = dropTargetClasses;\n        config.autoAriaDisabled = autoAriaDisabled;\n        if (config.type && newType !== config.type) {\n            unregisterDropZone(node, config.type);\n        }\n        config.type = newType;\n        registerDropZone(node, newType);\n        if (!autoAriaDisabled) {\n            node.setAttribute(\"aria-disabled\", dragDisabled);\n            node.setAttribute(\"role\", \"list\");\n            node.setAttribute(\"aria-describedby\", dragDisabled ? INSTRUCTION_IDs.DND_ZONE_DRAG_DISABLED : INSTRUCTION_IDs.DND_ZONE_ACTIVE);\n        }\n        dzToConfig.set(node, config);\n\n        if (isDragging) {\n            node.tabIndex =\n                node === focusedDz ||\n                focusedItem.contains(node) ||\n                config.dropFromOthersDisabled ||\n                (focusedDz && config.type !== dzToConfig.get(focusedDz).type)\n                    ? -1\n                    : 0;\n        } else {\n            node.tabIndex = config.zoneTabIndex;\n        }\n\n        node.addEventListener(\"focus\", handleZoneFocus);\n\n        for (let i = 0; i < node.children.length; i++) {\n            const draggableEl = node.children[i];\n            allDragTargets.add(draggableEl);\n            draggableEl.tabIndex = isDragging ? -1 : config.zoneItemTabIndex;\n            if (!autoAriaDisabled) {\n                draggableEl.setAttribute(\"role\", \"listitem\");\n            }\n            draggableEl.removeEventListener(\"keydown\", elToKeyDownListeners.get(draggableEl));\n            draggableEl.removeEventListener(\"click\", elToFocusListeners.get(draggableEl));\n            if (!dragDisabled) {\n                draggableEl.addEventListener(\"keydown\", handleKeyDown);\n                elToKeyDownListeners.set(draggableEl, handleKeyDown);\n                draggableEl.addEventListener(\"click\", handleClick);\n                elToFocusListeners.set(draggableEl, handleClick);\n            }\n            if (isDragging && config.items[i][ITEM_ID_KEY] === focusedItemId) {\n                printDebug(() => [\"focusing on\", {i, focusedItemId}]);\n                // if it is a nested dropzone, it was re-rendered and we need to refresh our pointer\n                focusedItem = draggableEl;\n                focusedItem.tabIndex = config.zoneItemTabIndex;\n                // without this the element loses focus if it moves backwards in the list\n                draggableEl.focus();\n            }\n        }\n    }\n    configure(options);\n\n    const handles = {\n        update: newOptions => {\n            printDebug(() => `keyboard dndzone will update newOptions: ${toString(newOptions)}`);\n            configure(newOptions);\n        },\n        destroy: () => {\n            printDebug(() => \"keyboard dndzone will destroy\");\n            unregisterDropZone(node, config.type);\n            dzToConfig.delete(node);\n            dzToHandles.delete(node);\n        }\n    };\n    dzToHandles.set(node, handles);\n    return handles;\n}\n","import {dndzone as pointerDndZone} from \"./pointerAction\";\nimport {dndzone as keyboardDndZone} from \"./keyboardAction\";\nimport {ITEM_ID_KEY, SHADOW_ELEMENT_HINT_ATTRIBUTE_NAME} from \"./constants\";\nimport {toString} from \"./helpers/util\";\n\n/**\n * A custom action to turn any container to a dnd zone and all of its direct children to draggables\n * Supports mouse, touch and keyboard interactions.\n * Dispatches two events that the container is expected to react to by modifying its list of items,\n * which will then feed back in to this action via the update function\n *\n * @typedef {object} Options\n * @property {array} items - the list of items that was used to generate the children of the given node (the list used in the #each block\n * @property {string} [type] - the type of the dnd zone. children dragged from here can only be dropped in other zones of the same type, default to a base type\n * @property {number} [flipDurationMs] - if the list animated using flip (recommended), specifies the flip duration such that everything syncs with it without conflict, defaults to zero\n * @property {boolean} [dragDisabled]\n * @property {boolean} [morphDisabled] - whether dragged element should morph to zone dimensions\n * @property {boolean} [dropFromOthersDisabled]\n * @property {number} [zoneTabIndex] - set the tabindex of the list container when not dragging\n * @property {number} [zoneItemTabIndex] - set the tabindex of the list container items when not dragging\n * @property {object} [dropTargetStyle]\n * @property {string[]} [dropTargetClasses]\n * @property {function} [transformDraggedElement]\n * @param {HTMLElement} node - the element to enhance\n * @param {Options} options\n * @return {{update: function, destroy: function}}\n */\nexport function dndzone(node, options) {\n    if (shouldIgnoreZone(node)) {\n        return {\n            update: () => {},\n            destroy: () => {}\n        };\n    }\n    validateOptions(options);\n    const pointerZone = pointerDndZone(node, options);\n    const keyboardZone = keyboardDndZone(node, options);\n    return {\n        update: newOptions => {\n            validateOptions(newOptions);\n            pointerZone.update(newOptions);\n            keyboardZone.update(newOptions);\n        },\n        destroy: () => {\n            pointerZone.destroy();\n            keyboardZone.destroy();\n        }\n    };\n}\n\n/**\n * If the user marked something in the ancestry of our node as shadow element, we can ignore it\n * We need the user to mark it for us because svelte updates the action from deep to shallow (but renders top down)\n * @param {HTMLElement} node\n * @return {boolean}\n */\nfunction shouldIgnoreZone(node) {\n    return !!node.closest(`[${SHADOW_ELEMENT_HINT_ATTRIBUTE_NAME}=\"true\"]`);\n}\n\nfunction validateOptions(options) {\n    /*eslint-disable*/\n    const {\n        items,\n        flipDurationMs,\n        type,\n        dragDisabled,\n        morphDisabled,\n        dropFromOthersDisabled,\n        zoneTabIndex,\n        zoneItemTabIndex,\n        dropTargetStyle,\n        dropTargetClasses,\n        transformDraggedElement,\n        autoAriaDisabled,\n        centreDraggedOnCursor,\n        ...rest\n    } = options;\n    /*eslint-enable*/\n    if (Object.keys(rest).length > 0) {\n        console.warn(`dndzone will ignore unknown options`, rest);\n    }\n    if (!items) {\n        throw new Error(\"no 'items' key provided to dndzone\");\n    }\n    const itemWithMissingId = items.find(item => !{}.hasOwnProperty.call(item, ITEM_ID_KEY));\n    if (itemWithMissingId) {\n        throw new Error(`missing '${ITEM_ID_KEY}' property for item ${toString(itemWithMissingId)}`);\n    }\n    if (dropTargetClasses && !Array.isArray(dropTargetClasses)) {\n        throw new Error(`dropTargetClasses should be an array but instead it is a ${typeof dropTargetClasses}, ${toString(dropTargetClasses)}`);\n    }\n    if (zoneTabIndex && !isInt(zoneTabIndex)) {\n        throw new Error(`zoneTabIndex should be a number but instead it is a ${typeof zoneTabIndex}, ${toString(zoneTabIndex)}`);\n    }\n    if (zoneItemTabIndex && !isInt(zoneItemTabIndex)) {\n        throw new Error(`zoneItemTabIndex should be a number but instead it is a ${typeof zoneItemTabIndex}, ${toString(zoneItemTabIndex)}`);\n    }\n}\n\nfunction isInt(value) {\n    return (\n        !isNaN(value) &&\n        (function (x) {\n            return (x | 0) === x;\n        })(parseFloat(value))\n    );\n}\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from 'svelte';\n\n\texport let value: boolean = false;\n\t//\texport let label: string | null = null;\n\texport let name: string;\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction inputChanged() {\n\t\tvalue = !value;\n\t\tdispatch('input', {\n\t\t\tvalue,\n\t\t});\n\t}\n</script>\n\n<label class=\"switch\"><input type=\"checkbox\" checked={value} on:input={inputChanged} {name} id={name} /><span /></label>\n","<script lang=\"ts\" generics=\"T extends DefaultRow\">\n\timport type { DefaultRow } from '$lib/js/types';\n\timport { createEventDispatcher } from 'svelte';\n\n\texport let label: string | null = null;\n\texport let value: keyof T;\n\texport let options: { id: keyof T; label: string }[];\n\n\tconst dispatch = createEventDispatcher();\n\tfunction setValue(newValue: keyof T) {\n\t\tvalue = newValue;\n\t\tisOpen = false;\n\t\tdispatch('input', {\n\t\t\tvalue,\n\t\t});\n\t}\n\tlet isOpen = false;\n</script>\n\n<label class=\"shgrid-pkg_select-label\">\n\t{#if label}\n\t\t<p>{label}</p>\n\t{/if}\n\t<select {value} on:input={e => setValue(e.currentTarget.value)}>\n\t\t{#each options as option}\n\t\t\t<option value={option.id}>\n\t\t\t\t{option.label}\n\t\t\t</option>\n\t\t{/each}\n\t</select>\n</label>\n","<script lang=\"ts\" generics=\"T extends DefaultRow\">\n\timport type { DefaultRow } from '$lib/js/types';\n\timport { flip } from 'svelte/animate';\n\timport { dndzone } from 'svelte-dnd-action';\n\timport type { BaseGridBuilder } from '$lib/js/BaseGridBuilder';\n\timport Select from '../../fields/select.svelte';\n\n\texport let builder: BaseGridBuilder<T>;\n\texport let rerender: Function;\n\texport let flipDurationMs = 300;\n\n\tconst getSorters = (builder: BaseGridBuilder<T>) =>\n\t\tbuilder.sorters.map((sorter, id) => ({ key: sorter[0], dir: sorter[1], id }));\n\tlet sorters = getSorters(builder);\n\t$: _ = () => {\n\t\t// console.log('rerender sorter');\n\t\tsorters = getSorters(builder);\n\t};\n\n\tfunction addSorter() {\n\t\tconst columnId = builder.columns?.[0]?.id ?? '';\n\t\tbuilder.sorters.push([columnId, 'asc']);\n\t\tbuilder.buildData();\n\t\tsorters = getSorters(builder);\n\t}\n\tfunction removeSorter(index: number) {\n\t\tbuilder.sorters.splice(index, 1);\n\t\tbuilder.buildData();\n\t\tsorters = getSorters(builder);\n\t}\n</script>\n\n<div class=\"shgrid-pkg_options-sorters\">\n\t<p class=\"shgrid-pkg_sorters-subtitle\">Sorting</p>\n\t<ul\n\t\tuse:dndzone={{ items: sorters, flipDurationMs, dropFromOthersDisabled: true }}\n\t\ton:consider={e => (sorters = e.detail.items)}\n\t\ton:finalize={e => {\n\t\t\tsorters = e.detail.items;\n\t\t\tbuilder.sorters = sorters.map(pair => [pair.key, pair.dir]);\n\t\t\trerender();\n\t\t}}\n\t>\n\t\t{#each sorters as sorter, i (sorter.id)}\n\t\t\t<li animate:flip={{ duration: flipDurationMs }} class=\"shgrid-pkg_option-sorter-row\">\n\t\t\t\t<p>{i === 0 ? 'Sort by' : 'Then by'}</p>\n\t\t\t\t<svg class=\"shgrid-pkg_sorter-svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"\n\t\t\t\t\t><title>drag</title><path\n\t\t\t\t\t\td=\"M7,19V17H9V19H7M11,19V17H13V19H11M15,19V17H17V19H15M7,15V13H9V15H7M11,15V13H13V15H11M15,15V13H17V15H15M7,11V9H9V11H7M11,11V9H13V11H11M15,11V9H17V11H15M7,7V5H9V7H7M11,7V5H13V7H11M15,7V5H17V7H15Z\"\n\t\t\t\t\t/></svg\n\t\t\t\t>\n\t\t\t\t<Select\n\t\t\t\t\tvalue={sorter.key.toString()}\n\t\t\t\t\ton:input={e => {\n\t\t\t\t\t\tbuilder.sorters[i][0] = e.detail.value;\n\t\t\t\t\t\tbuilder.buildData();\n\t\t\t\t\t}}\n\t\t\t\t\toptions={builder.columns}\n\t\t\t\t/>\n\t\t\t\t<Select\n\t\t\t\t\tvalue={sorter.dir}\n\t\t\t\t\ton:input={e => {\n\t\t\t\t\t\tbuilder.sorters[i][1] = e.detail.value;\n\t\t\t\t\t\tbuilder.buildData();\n\t\t\t\t\t}}\n\t\t\t\t\toptions={[\n\t\t\t\t\t\t{ id: 'asc', label: 'Ascending' },\n\t\t\t\t\t\t{ id: 'desc', label: 'Descending' },\n\t\t\t\t\t]}\n\t\t\t\t\ton:input={() => builder.buildData()}\n\t\t\t\t/>\n\n\t\t\t\t<button class=\"shgrid-pkg_sorter-btn-error\" on:click={() => removeSorter(i)}>\n\t\t\t\t\t<svg class=\"shgrid-pkg_sorter-svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"\n\t\t\t\t\t\t><title>Remove sorting layer</title><path d=\"M19,13H5V11H19V13Z\" /></svg\n\t\t\t\t\t>\n\t\t\t\t</button>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n\t<button class=\"shgrid-pkg_btn-add-sorter\" on:click={() => addSorter()}>\n\t\t<span>Add Sorting Layer</span>\n\t\t<svg class=\"shgrid-pkg_sorter-add-sorter-svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"\n\t\t\t><title>Add sorting layer</title><path d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" /></svg\n\t\t>\n\t</button>\n</div>\n","<script lang=\"ts\" generics=\"T extends DefaultRow\">\n\timport { flip } from 'svelte/animate';\n\timport { dndzone } from 'svelte-dnd-action';\n\timport type { BaseGridBuilder } from './js/BaseGridBuilder';\n\timport Switch from './fields/switch.svelte';\n\timport Sorter from './components/options/sorter.svelte';\n\timport type { DefaultRow } from './js/types';\n\n\texport let builder: BaseGridBuilder<T>;\n\texport let rerender: Function;\n\tlet columns = builder.columns;\n\tlet sorters = getSorterWithId(builder);\n\t// $: _ = (() => (sorters = getSorterWithId(builder)))();\n\n\tfunction getSorterWithId(builder: BaseGridBuilder<T>) {\n\t\treturn builder.sorters.map((sorter, i) => {\n\t\t\treturn { id: i, key: sorter[0], dir: sorter[1] };\n\t\t});\n\t}\n\n\tconst flipDurationMs = 300;\n</script>\n\n<div class=\"shgrid-pkg_option-block\">\n\t<div class=\"shgrid-pkg_options-columns\">\n\t\t<h4 class=\"shgrid-pkg_columns-subtitle\">Columns</h4>\n\t\t<ul\n\t\t\tuse:dndzone={{ items: columns, flipDurationMs, dropFromOthersDisabled: true }}\n\t\t\ton:consider={e => {\n\t\t\t\t// console.dir({ items: e.detail.items, columns });\n\t\t\t\tcolumns = e.detail.items;\n\t\t\t\trerender();\n\t\t\t}}\n\t\t\ton:finalize={e => {\n\t\t\t\tbuilder.columns = e.detail.items;\n\t\t\t\tcolumns = [...builder.columns];\n\t\t\t\t// console.log({ columns });\n\t\t\t\trerender();\n\t\t\t}}\n\t\t>\n\t\t\t{#each columns as column, i (column.id)}\n\t\t\t\t<li animate:flip={{ duration: flipDurationMs }} class=\"shgrid-pkg_column-option-row\">\n\t\t\t\t\t<svg class=\"shgrid-pkg_options-column-svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"\n\t\t\t\t\t\t><title>drag</title><path\n\t\t\t\t\t\t\td=\"M7,19V17H9V19H7M11,19V17H13V19H11M15,19V17H17V19H15M7,15V13H9V15H7M11,15V13H13V15H11M15,15V13H17V15H15M7,11V9H9V11H7M11,11V9H13V11H11M15,11V9H17V11H15M7,7V5H9V7H7M11,7V5H13V7H11M15,7V5H17V7H15Z\"\n\t\t\t\t\t\t/></svg\n\t\t\t\t\t>\n\t\t\t\t\t<label for={column.id.toString()}>{column.label}</label>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tname={column.id.toString()}\n\t\t\t\t\t\tvalue={!column.hidden}\n\t\t\t\t\t\ton:input={() => {\n\t\t\t\t\t\t\tcolumn.hidden = !column.hidden;\n\t\t\t\t\t\t\tbuilder.buildData();\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</li>\n\t\t\t{/each}\n\t\t</ul>\n\t</div>\n\t<Sorter {builder} {rerender} />\n</div>\n","<script lang=\"ts\" generics=\"T extends DefaultRow\">\n\timport type { DefaultRow } from './js/types';\n\timport type { BaseGridBuilder } from './js/BaseGridBuilder';\n\n\texport let builder: BaseGridBuilder<T>;\n\t$: page = Math.floor(builder.paginator.offset / builder.paginator.limit);\n\t$: highestPage = Math.floor(builder.count / builder.paginator.limit);\n\tlet inputValue = page ?? 0;\n</script>\n\n<form class=\"shgrid-pkg_pagination\">\n\t<div class=\"shgrid-pkg_pagination-btns\">\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tdisabled={page < 1}\n\t\t\tclass=\"shgrid-pkg_pagination-btn\"\n\t\t\ton:click={() => builder.setPage(page - 1)}\n\t\t>\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"shgrid-pkg_paginator-btn-svg\"\n\t\t\t\t><title>Previous Page</title><path\n\t\t\t\t\td=\"M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z\"\n\t\t\t\t/></svg\n\t\t\t>\n\t\t</button>\n\t\t<p class=\"shgrid-pkg_paginator-text\">{page + 1} of {highestPage + 1}</p>\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tdisabled={page >= highestPage}\n\t\t\tclass=\"shgrid-pkg_pagination-btn\"\n\t\t\ton:click={() => builder.setPage(page + 1)}\n\t\t>\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"shgrid-pkg_paginator-btn-svg\"\n\t\t\t\t><title>Next Page</title><path d=\"M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z\" /></svg\n\t\t\t>\n\t\t</button>\n\t</div>\n\t{#if builder.paginator.limitOptions !== null}\n\t\t<div style=\"position: relative;\">\n\t\t\t<select on:change={(e) => (builder.buildData())} bind:value={builder.paginator.limit} class=\"shgrid-pkg_pagination-select\">\n\t\t\t\t{#each builder.paginator.limitOptions as option}\n\t\t\t\t\t<option value={option}>{option}</option>\n\t\t\t\t{/each}\n\t\t\t</select>\n\t\t</div>\n\t{/if}\n\t<div class=\"shgrid-pkg_pagination-search-wrapper\">\n\t\t<input\n\t\t\tclass=\"shgrid-pkg_pagination-search-input\"\n\t\t\ttype=\"number\"\n\t\t\ton:input={e => (inputValue = +e.currentTarget.value - 1)}\n\t\t\tvalue={page + 1}\n\t\t\tmax={1 + builder.count / builder.paginator.limit}\n\t\t\tmin={1}\n\t\t/>\n\t\t<button class=\"shgrid-pkg_pagination-search-btn\" on:click={() => builder.setPage(inputValue)} type=\"button\"\n\t\t\t>Go &rarr;</button\n\t\t>\n\t</div>\n\t<!-- <input type=\"number\" bind:value={builder.paginator.limit}/> -->\n</form>\n","<script lang=\"ts\">\n\texport let code: number;\n\texport let message: string;\n</script>\n\n<div class=\"wrapper\">\n\t<h3 class=\"subtitle\">Error: {code}</h3>\n\t<p>{message}</p>\n</div>\n\n<style lang=\"scss\">\n\t.wrapper {\n\t\twidth: 100%;\n\t\talign-items: center;\n\t\tpadding: size(8);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n</style>\n","<script lang=\"ts\" generics=\"T extends DefaultRow\">\n\timport { select_multiple_value } from 'svelte/internal';\n\n\timport type { BaseGridBuilder } from '$lib/js/BaseGridBuilder.js';\n\timport { onMount } from 'svelte';\n\timport type { DefaultRow, ListenerFunc } from './js/types';\n\timport Loading from './loading.svelte';\n\timport Options from './options.svelte';\n\timport Paginator from './paginator.svelte';\n\timport ErrorRow from './errorRow.svelte';\n\timport Selection from './components/selection.svelte';\n\timport { createEventDispatcher } from 'svelte';\n\n\texport let hasOptions = true;\n\texport let canExpandRows = true;\n\texport let builder: BaseGridBuilder<T>;\n\tlet listener: ListenerFunc = () => {\n\t\t// console.log('build');\n\t\tbuilder = builder;\n\t};\n\tbuilder.setListener(listener);\n\n\tlet allSelected = false;\n\n\tconst selectAll = () => {\n\t\tif (!allSelected){\n\t\t\trows.forEach((row) => {\n\t\t\t\trow.isSelected = true;\n\t\t\t\tbuilder.selected?.set(row.data.id, row.data);\n\t\t\t})\n\t\t\tallSelected = true;\n\t\t} else {\n\t\t\trows.forEach((row) => {\n\t\t\t\tif (row.isSelected){\n\t\t\t\t\tbuilder.selected?.delete(row.data.id, row.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\tallSelected = false;\n\t\t}\n\t\trows = rows;\n\t}\n\n\tonMount(() => {\n\t\tif (!builder.buildDataOnLoad) builder.buildData();\n\t});\n\tlet isOptionsOpen = false;\n\n\t$: notHiddenColumns = builder.columns.filter(column => !column.hidden);\n\n\t$: rows = builder.data.map(row => {\n\t\treturn {\n\t\t\tdata: row,\n\t\t\tisOpen: false,\n\t\t\tisSelected: builder.selected === undefined ? false : builder.selected.has(row.id as string),\n\t\t};\n\t});\n\tconst dispatch = createEventDispatcher();\n</script>\n\n<!-- <pre>{JSON.stringify(builder, null, 2)}</pre> -->\n<div class=\"shgrid-wrapper\">\n\t{#if hasOptions}\n\t\t<button class=\"shgrid-pkg_options-btn\" on:click={() => (isOptionsOpen = !isOptionsOpen)}>\n\t\t\t<p>Options</p>\n\t\t\t<svg class=\"shgrid-pkg_options-btn-svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t<title>Options</title>\n\t\t\t\t<path\n\t\t\t\t\td=\"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</button>\n\t{/if}\n\t<div>\n\t\t{#if isOptionsOpen}\n\t\t\t<Options {builder} rerender={listener} />\n\t\t{/if}\n\t\t<table class=\"shgrid-pkg_table\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t{#if builder.selected !== undefined}\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t<label class=\"shgrid-pkg_th-label\" style=\"padding: 0\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tchecked={allSelected}\n\t\t\t\t\t\t\t\t\ton:change={(e) => selectAll()}\n\t\t\t\t\t\t\t\t\tclass=\"shgrid-pkg_selection-checkbox shgrid-pkg_checkbox\"\n\t\t\t\t\t\t\t\t\tstyle=\"vertical-align: bottom\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#if canExpandRows}\n\t\t\t\t\t\t<th />\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#each notHiddenColumns as column}\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t<label class=\"shgrid-pkg_th-label\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclass=\"shgrid-pkg_th-label-top\"\n\t\t\t\t\t\t\t\t\tclass:shgrid-pkg_th-label-top-sortable={column?.sortable !== false}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<p class=\"shgrid-pkg_th\">{column.label}</p>\n\t\t\t\t\t\t\t\t\t{#if column?.sortable != false}\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclass=\"shgrid-pkg_th-btn-hidden\"\n\t\t\t\t\t\t\t\t\t\t\ton:click={() => builder.sortColumn(column.id.toString())}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"shgrid-pkg_th-svg\"\n\t\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{#if builder.sorters?.[0]?.[0] === column.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{#if builder.sorters?.[0]?.[1] === 'desc'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<title>sort-alphabetical-descending</title><path\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td=\"M19 7H22L18 3L14 7H17V21H19M11 13V15L7.67 19H11V21H5V19L8.33 15H5V13M9 3H7C5.9 3 5 3.9 5 5V11H7V9H9V11H11V5C11 3.9 10.11 3 9 3M9 7H7V5H9Z\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<title>sort-alphabetical-ascending</title><path\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\td=\"M19 17H22L18 21L14 17H17V3H19M11 13V15L7.67 19H11V21H5V19L8.33 15H5V13M9 3H7C5.9 3 5 3.9 5 5V11H7V9H9V11H11V5C11 3.9 10.11 3 9 3M9 7H7V5H9Z\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<title>sort</title><path\n\t\t\t\t\t\t\t\t\t\t\t\t\t\td=\"M18 21L14 17H17V7H14L18 3L22 7H19V17H22M2 19V17H12V19M2 13V11H9V13M2 7V5H6V7H2Z\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{#if column?.searchable != false}\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclass=\"shgrid-pkg_th-input\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\ton:input={e => {\n\t\t\t\t\t\t\t\t\t\t\tcolumn.filter = e.currentTarget.value;\n\t\t\t\t\t\t\t\t\t\t\tbuilder.setPage(0);\n\t\t\t\t\t\t\t\t\t\t\tbuilder.buildData();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t{#if builder.loading}\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"999\">\n\t\t\t\t\t\t\t<Loading />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t{:else if builder.error !== null}\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan=\"999\">\n\t\t\t\t\t\t\t<ErrorRow message={builder.error.message} code={builder.error.code} />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t{:else}\n\t\t\t\t\t{#each rows as row, i}\n\t\t\t\t\t\t<tr\n\t\t\t\t\t\t\tclass:shgrid-pkg_odd-darker={(i % 2) - 1}\n\t\t\t\t\t\t\tclass=\"shgrid-pkg_body-tr\"\n\t\t\t\t\t\t\tclass:shgrid-pkg_selected-tr={builder.selected?.has(row.data.id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{#if builder.selected !== undefined}\n\t\t\t\t\t\t\t\t<td class=\"shgrid-pkg_td shgrid-pkg_selection-td\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\tchecked={row.isSelected}\n\t\t\t\t\t\t\t\t\t\tclass=\"shgrid-pkg_selection-checkbox shgrid-pkg_checkbox\"\n\t\t\t\t\t\t\t\t\t\ton:input={() => {\n\t\t\t\t\t\t\t\t\t\t\tif (row.isSelected) {\n\t\t\t\t\t\t\t\t\t\t\t\tbuilder.selected?.delete(row.data.id);\n\t\t\t\t\t\t\t\t\t\t\t\tallSelected = false;\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tbuilder.selected?.set(row.data.id, row.data);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(builder.selected);\n\t\t\t\t\t\t\t\t\t\t\tdispatch('updatedSelection', builder.selected);\n\t\t\t\t\t\t\t\t\t\t\tlistener();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t{#if canExpandRows}\n\t\t\t\t\t\t\t\t<td class=\"shgrid-pkg_td\">\n\t\t\t\t\t\t\t\t\t<button class=\"shgrid-pkg_expand-btn\" on:click={() => (row.isOpen = !row.isOpen)}>\n\t\t\t\t\t\t\t\t\t\t{#if row.isOpen}\n\t\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"shgrid-pkg_expand-btn-svg\"\n\t\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<title>Shrink</title>\n\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\td=\"M19.5,3.09L15,7.59V4H13V11H20V9H16.41L20.91,4.5L19.5,3.09M4,13V15H7.59L3.09,19.5L4.5,20.91L9,16.41V20H11V13H4Z\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"shgrid-pkg_expand-btn-svg\"\n\t\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 24 24\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<title>Expand</title>\n\t\t\t\t\t\t\t\t\t\t\t\t<path\n\t\t\t\t\t\t\t\t\t\t\t\t\td=\"M10,21V19H6.41L10.91,14.5L9.5,13.09L5,17.59V14H3V21H10M14.5,10.91L19,6.41V10H21V3H14V5H17.59L13.09,9.5L14.5,10.91Z\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t{#each notHiddenColumns as column, i}\n\t\t\t\t\t\t\t\t<td class=\"shgrid-pkg_td\" on:click={e => dispatch('cellClick', { e, row, column })}>\n\t\t\t\t\t\t\t\t\t{#if builder.rowLink === undefined && column.link === undefined}\n\t\t\t\t\t\t\t\t\t\t<div>{@html builder.formatCell(row.data, column.id.toString())}</div>\n\t\t\t\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\thref={(() => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (column.link !== undefined) return column.link(row.data);\n\t\t\t\t\t\t\t\t\t\t\t\tif (builder.rowLink !== undefined) return builder.rowLink(row.data);\n\t\t\t\t\t\t\t\t\t\t\t})()}\n\t\t\t\t\t\t\t\t\t\t\tclass=\"shgrid-pkg_td-link\"\n\t\t\t\t\t\t\t\t\t\t\tclass:shgrid-pkg_hover-highlight-row={column.link === undefined}\n\t\t\t\t\t\t\t\t\t\t\tclass:shgrid-pkg_hover-highlight-cell={column.link !== undefined}\n\t\t\t\t\t\t\t\t\t\t\tclass:shgrid-pkg_selected-a={builder.selected?.has(row.data.id)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{@html builder.formatCell(row.data, column.id.toString())}</a\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</tr>\n\n\t\t\t\t\t\t{#if row.isOpen}\n\t\t\t\t\t\t\t<tr class=\"shgrid-pkg_expanded\" class:shgrid-pkg_odd-darker={(i % 2) - 1}>\n\t\t\t\t\t\t\t\t<td colspan=\"999\" class=\"shgrid-pkg_expanded\">\n\t\t\t\t\t\t\t\t\t<div class=\"shgrid-pkg_expanded-wrapper\">\n\t\t\t\t\t\t\t\t\t\t{#each builder.columns as column}\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"shgrid-pkg_expanded-row\">\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{column.label}:</p>\n\t\t\t\t\t\t\t\t\t\t\t\t<p>{JSON.stringify(builder.data[i][column.id])}</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t{/each}\n\t\t\t\t{/if}\n\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<Paginator {builder} />\n</div>\n\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","action_destroyer","action_result","destroy","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","append","target","node","appendChild","get_root_for_style","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","sheet","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","name","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_style","key","important","removeProperty","setProperty","select_option","select","mounting","option","__value","selected","undefined","selectedIndex","toggle_class","toggle","classList","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","set","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","ownerNode","clear","create_animation","from","params","to","getBoundingClientRect","left","right","top","bottom","easing","start","start_time","end","tick","css","running","started","stop","callback","Promise","fulfill","add","loop","fix_position","getComputedStyle","position","width","height","transform","add_transform","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","cancelable","callbacks","$$","bubbles","e","createEvent","initCustomEvent","custom_event","slice","call","defaultPrevented","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","flushidx","flush","saved_component","update","pop","has","fragment","before_update","dirty","ctx","after_update","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","fix_and_outro_and_destroy_block","lookup","outro_and_destroy_block","update_keyed_each","old_blocks","get_key","dynamic","list","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","deltas","updates","child_ctx","Math","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","create_component","mount_component","customElement","new_on_destroy","on_mount","map","on_destroy","destroy_component","filtered","targets","flush_render_callbacks","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","skip_bound","ready","ret","rest","hydrate","nodes","Array","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","index","splice","$set","$$props","obj","$$set","keys","div9","cubicOut","flip","ox","oy","transformOrigin","parseFloat","dx","dy","sqrt","u","y","sx","sy","FINALIZE_EVENT_NAME","CONSIDER_EVENT_NAME","dispatchFinalizeEvent","el","items","dispatchEvent","CustomEvent","dispatchConsiderEvent","DRAGGED_ENTERED_EVENT_NAME","DRAGGED_LEFT_EVENT_NAME","DRAGGED_OVER_INDEX_EVENT_NAME","DRAGGED_LEFT_DOCUMENT_EVENT_NAME","DRAGGED_LEFT_TYPES","LEFT_FOR_ANOTHER","OUTSIDE_OF_ANY","dispatchDraggedElementEnteredContainer","containerEl","indexObj","draggedEl","dispatchDraggedElementLeftContainerForAnother","theOtherDz","dispatchDraggedElementIsOverIndex","TRIGGERS","DRAG_STARTED","DRAGGED_ENTERED","DRAGGED_ENTERED_ANOTHER","DRAGGED_OVER_INDEX","DRAGGED_LEFT","DRAGGED_LEFT_ALL","DROPPED_INTO_ZONE","DROPPED_INTO_ANOTHER","DROPPED_OUTSIDE_OF_ANY","DRAG_STOPPED","SOURCES","POINTER","KEYBOARD","SHADOW_ITEM_MARKER_PROPERTY_NAME","SHADOW_ELEMENT_ATTRIBUTE_NAME","SHADOW_ELEMENT_HINT_ATTRIBUTE_NAME","SHADOW_PLACEHOLDER_ITEM_ID","DRAGGED_ELEMENT_ID","ITEM_ID_KEY","activeDndZoneCount","incrementActiveDropZoneCount","decrementActiveDropZoneCount","isOnServer","getBoundingRectNoTransforms","ta","rect","tx","startsWith","w","offsetWidth","h","offsetHeight","getAbsoluteRectNoTransforms","scrollY","scrollX","getAbsoluteRect","findCenter","isPointInsideRect","point","findCenterOfElement","isCenterOfAInsideB","elA","elB","calcDistanceBetweenCenters","centerOfA","centerOfB","pointA","pointB","pow","dzToShadowIndexToRect","resetIndexesCache","resetIndexesCacheForDz","dz","findWouldBeIndex","floatingAboveEl","collectionBelowEl","isProximityBased","shadowElIndex","findIndex","child","cacheShadowRect","cachedShadowRect","indexOfMin","minDistanceSoFar","Number","MAX_VALUE","distance","makeScroller","scrollingInfo","resetScrolling","directionObj","stepPx","scrollContainer","scrollBy","calcScrollStepPx","distancePx","scrollIfNeeded","pointer","elementToScroll","distances","min","documentElement","clientWidth","calcInnerDistancesBetweenPointAndSidesOfElement","isAlreadyScrolling","scrollingVertically","scrollingHorizontally","scrollHeight","clientHeight","scrollWidth","toString","object","JSON","stringify","getDepth","_getDepth","countSoFar","parentElement","INTERVAL_MS","TOLERANCE_PX","observe","dropZones","intervalMs","lastDropZoneFound","lastIndexFound","lastCentrePositionOfDragged","lastIsDraggedInADropZone","dropZonesFromDeepToShallow","sort","dz1","dz2","andNow","currentCenterOfDragged","scrolled","setTimeout","isElementOffDocument","dispatchDraggedLeftDocument","isDraggedInADropZone","dispatchDraggedElementLeftContainerForNone","mousePosition","updateMousePosition","touches","clientX","clientY","FEATURE_FLAG_NAMES","freeze","USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT","featureFlagsMap","getFeatureFlag","flagName","TRANSITION_DURATION_SECONDS","trs","property","morphDraggedElementToBeLike","copyFromEl","currentMouseX","currentMouseY","copyStylesFromTo","newRect","draggedElRect","widthChange","heightChange","relativeDistanceOfMousePointerFromDraggedSides","copyToEl","computedStyle","s","getPropertyValue","getPropertyPriority","styleDraggable","draggableEl","dragDisabled","draggable","ondragstart","userSelect","WebkitUserSelect","cursor","hideElement","dragTarget","display","zIndex","styleActiveDropZones","getStyles","getClasses","styles","styleInactiveDropZones","contains","remove","DEFAULT_DROP_ZONE_TYPE","MIN_OBSERVATION_INTERVAL_MS","DISABLED_OBSERVATION_INTERVAL_MS","MIN_MOVEMENT_BEFORE_DRAG_START_PX","DEFAULT_DROP_TARGET_STYLE","outline","ORIGINAL_DRAGGED_ITEM_MARKER_ATTRIBUTE","originalDragTarget","draggedElData","draggedElType","originDropZone","originIndex","shadowElData","shadowElDropZone","dragStartMousePosition","currentMousePosition","unlockOriginDzMinDimensions","isWorkingOnPreviousDrag","finalizingPreviousDrag","isDraggedOutsideOfAnyDz","scheduledForRemovalAfterDrop","typeToDropZones","dzToConfig","elToMouseDownListener","WeakMap","unregisterDropZone","dropZoneEl","watchDraggedElement","handleDraggedEntered","handleDraggedLeft","handleDraggedIsOverIndex","handleDrop","setIntervalMs","max","dropAnimationDurationMs","observationIntervalMs","unWatchDraggedElement","clearTimeout","findShadowElementIdx","item","dropFromOthersDisabled","currentTarget","newOriginZoneItems","trigger","id","source","shadowElIdx","originZoneItems","handleMouseMove","preventDefault","moveDraggedElementToWasDroppedState","dropTargetStyle","dropTargetClasses","shadowElRect","newTransform","transition","animateDraggedToFinalPosition","shadowEl","visibility","cleanupPostDrop","dndzone","initialized","config","flipDurationMs","morphDisabled","transformDraggedElement","centreDraggedOnCursor","elToIdx","removeMaybeListeners","handleMouseMoveMaybeDragStart","handleFalseAlarm","currentIdx","rootNode","closest","originDropZoneRoot","body","keepOriginalElementInDom","focus","createShadowElData","originalElement","positionCenterOnXY","cloned","cloneNode","values","elIsSelect","tagName","selects","querySelectorAll","clonedSelects","optionEl","querySelector","elIsCanvas","canvases","clonedCanvases","canvas","clonedCanvas","getContext","drawImage","svelteNodeClone","elTopPx","elLeftPx","center","margin","boxSizing","createDraggedElementFrom","originalMinHeight","minHeight","originalMinWidth","minWidth","preventShrinking","passive","capture","handleDragStart","handleMouseDown","isContentEditable","button","stopPropagation","configure","newType","getConfigProp","propName","objA","objB","keyA","hasOwnProperty","areObjectsShallowEqual","arrA","arrB","areArraysShallowEqualSameOrder","idx","newOptions","destroyDz","INSTRUCTION_IDs","DND_ZONE_ACTIVE","DND_ZONE_DRAG_DISABLED","ID_TO_INSTRUCTION","ALERT_DIV_ID","alertsDiv","initAriaOnBrowser","opacity","prepend","entries","txt","div","innerHTML","instructionToHiddenDiv","alertToScreenReader","alertText","draggedItemType","focusedDz","focusedItem","focusedItemId","isDragging","focusedDzLabel","focusedItemLabel","allDragTargets","WeakSet","elToKeyDownListeners","elToFocusListeners","dzToHandles","registerDropZone","readyState","globalKeyDownHandler","globalClickHandler","getElementById","activeElement","handleZoneFocus","newlyFocusedDz","originItems","originItem","find","originIdx","itemToMove","targetItems","autoAriaDisabled","unshift","triggerAllDzsUpdate","dispatchConsider","blur","zoneTabIndex","zoneItemTabIndex","swap","arr","j","handleKeyDown","disabled","href","focusedItemIdx","tabIndex","setCurrentFocusedItem","dropTargets","msg","handleClick","handles","shouldIgnoreZone","validateOptions","pointerZone","pointerDndZone","keyboardZone","keyboardDndZone","console","warn","itemWithMissingId","isArray","isInt","isNaN","label","input","span","dispatch","$$invalidate","t0_value","option_value_value","t0","create_if_block","label_1","setValue","newValue","columns","dir","li","svg0","title0","path0","current","select0_changes","select1_changes","stop_animation","ul","builder","rerender","getSorters","sorters","sorter","addSorter","columnId","buildData","removeSorter","pair","t2_value","hidden","svg","title","path","t2","switch_1_changes","div1","div0","h4","getSorterWithId","column","paginator","limitOptions","limit","t_value","t4_value","if_block","button0","button0_disabled_value","button1","button1_disabled_value","input_value_value","count","form","svg1","title1","path1","button2","t4","inputValue","page","floor","offset","highestPage","setPage","selected_option","select_value","h3","code","message","th","create_if_block_9","create_if_block_10","sortable","create_if_block_8","searchable","create_if_block_7","error","tr","td","checked","input_checked_value","isSelected","isOpen","create_if_block_5","formatCell","link","raw_value","rowLink","create_if_block_3","each_value_1","p0","p1","t3","t3_value","create_if_block_6","create_if_block_4","if_block2","create_if_block_2","create_if_block_14","create_if_block_13","create_if_block_12","create_if_block_11","loading","table","thead","tbody","hasOptions","canExpandRows","listener","setListener","allSelected","selectAll","rows","row","buildDataOnLoad","isOptionsOpen","notHiddenColumns","sortColumn","each_value_3","column_index_1","log"],"mappings":"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","x_google_ignoreList":[0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]}